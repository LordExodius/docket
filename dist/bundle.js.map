{"version":3,"file":"bundle.js","sources":["webpack://docket/./node_modules/highlight.js/lib/core.js","webpack://docket/webpack/runtime/rspack_version","webpack://docket/webpack/runtime/rspack_unique_id","webpack://docket/./node_modules/marked/lib/marked.esm.js","webpack://docket/./node_modules/dompurify/dist/purify.es.mjs","webpack://docket/./node_modules/marked-highlight/src/index.js","webpack://docket/./node_modules/marked-alert/dist/index.js","webpack://docket/./node_modules/highlight.js/es/languages/java.js","webpack://docket/./node_modules/highlight.js/es/languages/javascript.js","webpack://docket/./node_modules/highlight.js/es/languages/typescript.js","webpack://docket/./src/index.ts","webpack://docket/./node_modules/highlight.js/es/core.js","webpack://docket/./node_modules/highlight.js/es/languages/c.js","webpack://docket/./node_modules/highlight.js/es/languages/cpp.js","webpack://docket/./node_modules/highlight.js/es/languages/python.js","webpack://docket/./node_modules/highlight.js/es/languages/plaintext.js","webpack://docket/./node_modules/highlight.js/es/languages/rust.js","webpack://docket/./node_modules/marked-footnote/dist/index.js"],"sourcesContent":["/* eslint-disable no-multi-assign */\n\nfunction deepFreeze(obj) {\n  if (obj instanceof Map) {\n    obj.clear =\n      obj.delete =\n      obj.set =\n        function () {\n          throw new Error('map is read-only');\n        };\n  } else if (obj instanceof Set) {\n    obj.add =\n      obj.clear =\n      obj.delete =\n        function () {\n          throw new Error('set is read-only');\n        };\n  }\n\n  // Freeze self\n  Object.freeze(obj);\n\n  Object.getOwnPropertyNames(obj).forEach((name) => {\n    const prop = obj[name];\n    const type = typeof prop;\n\n    // Freeze prop if it is an object or function and also not already frozen\n    if ((type === 'object' || type === 'function') && !Object.isFrozen(prop)) {\n      deepFreeze(prop);\n    }\n  });\n\n  return obj;\n}\n\n/** @typedef {import('highlight.js').CallbackResponse} CallbackResponse */\n/** @typedef {import('highlight.js').CompiledMode} CompiledMode */\n/** @implements CallbackResponse */\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n    this.isMatchIgnored = false;\n  }\n\n  ignoreMatch() {\n    this.isMatchIgnored = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit$1(original, ...objects) {\n  /** @type Record<string,any> */\n  const result = Object.create(null);\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  // rarely we can have a sublanguage where language is undefined\n  // TODO: track down why\n  return !!node.scope;\n};\n\n/**\n *\n * @param {string} name\n * @param {{prefix:string}} options\n */\nconst scopeToCSSClass = (name, { prefix }) => {\n  // sub-language\n  if (name.startsWith(\"language:\")) {\n    return name.replace(\"language:\", \"language-\");\n  }\n  // tiered scope: comment.line\n  if (name.includes(\".\")) {\n    const pieces = name.split(\".\");\n    return [\n      `${prefix}${pieces.shift()}`,\n      ...(pieces.map((x, i) => `${x}${\"_\".repeat(i + 1)}`))\n    ].join(\" \");\n  }\n  // simple scope\n  return `${prefix}${name}`;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    const className = scopeToCSSClass(node.scope,\n      { prefix: this.classPrefix });\n    this.span(className);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{scope?: string, language?: string, children: Node[]} | string} Node */\n/** @typedef {{scope?: string, language?: string, children: Node[]} } DataNode */\n/** @typedef {import('highlight.js').Emitter} Emitter */\n/**  */\n\n/** @returns {DataNode} */\nconst newNode = (opts = {}) => {\n  /** @type DataNode */\n  const result = { children: [] };\n  Object.assign(result, opts);\n  return result;\n};\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = newNode();\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} scope */\n  openNode(scope) {\n    /** @type Node */\n    const node = newNode({ scope });\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addText(text)\n  - __addSublanguage(emitter, subLanguageName)\n  - startScope(scope)\n  - endScope()\n  - finalize()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /** @param {string} scope */\n  startScope(scope) {\n    this.openNode(scope);\n  }\n\n  endScope() {\n    this.closeNode();\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  __addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    if (name) node.scope = `language:${name}`;\n\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    this.closeAllNodes();\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction anyNumberOfTimes(re) {\n  return concat('(?:', re, ')*');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(?:', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param { Array<string | RegExp | Object> } args\n * @returns {object}\n */\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/** @typedef { {capture?: boolean} } RegexEitherOptions */\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] | [...(RegExp | string)[], RegexEitherOptions]} args\n * @returns {string}\n */\nfunction either(...args) {\n  /** @type { object & {capture?: boolean} }  */\n  const opts = stripOptionsFromArgs(args);\n  const joined = '('\n    + (opts.capture ? \"\" : \"?:\")\n    + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/**\n * @param {RegExp | string} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  const match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// BACKREF_RE matches an open parenthesis or backreference. To avoid\n// an incorrect parse, it additionally matches the following:\n// - [...] elements, where the meaning of parentheses and escapes change\n// - other escape sequences, so we do not misparse escape sequences as\n//   interesting elements\n// - non-matching or lookahead parentheses, which do not capture. These\n//   follow the '(' with a '?'.\nconst BACKREF_RE = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n\n// **INTERNAL** Not intended for outside usage\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {{joinWith: string}} opts\n * @returns {string}\n */\nfunction _rewriteBackreferences(regexps, { joinWith }) {\n  let numCaptures = 0;\n\n  return regexps.map((regex) => {\n    numCaptures += 1;\n    const offset = numCaptures;\n    let re = source(regex);\n    let out = '';\n\n    while (re.length > 0) {\n      const match = BACKREF_RE.exec(re);\n      if (!match) {\n        out += re;\n        break;\n      }\n      out += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        out += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        out += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    return out;\n  }).map(re => `(${re})`).join(joinWith);\n}\n\n/** @typedef {import('highlight.js').Mode} Mode */\n/** @typedef {import('highlight.js').ModeCallback} ModeCallback */\n\n// Common regexps\nconst MATCH_NOTHING_RE = /\\b\\B/;\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit$1({\n    scope: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  scope: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  scope: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  const mode = inherit$1(\n    {\n      scope: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push({\n    scope: 'doctag',\n    // hack to avoid the space from being included. the space is necessary to\n    // match here to prevent the plain text rule below from gobbling up doctags\n    begin: '[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)',\n    end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,\n    excludeBegin: true,\n    relevance: 0\n  });\n  const ENGLISH_WORD = either(\n    // list of common 1 and 2 letter words in English\n    \"I\",\n    \"a\",\n    \"is\",\n    \"so\",\n    \"us\",\n    \"to\",\n    \"at\",\n    \"if\",\n    \"in\",\n    \"it\",\n    \"on\",\n    // note: this is not an exhaustive list of contractions, just popular ones\n    /[A-Za-z]+['](d|ve|re|ll|t|s|n)/, // contractions - can't we'd they're let's, etc\n    /[A-Za-z]+[-][a-z]+/, // `no-way`, etc.\n    /[A-Za-z][a-z]{2,}/ // allow capitalized words at beginning of sentences\n  );\n  // looking like plain text, more likely to be a comment\n  mode.contains.push(\n    {\n      // TODO: how to include \", (, ) without breaking grammars that use these for\n      // comment delimiters?\n      // begin: /[ ]+([()\"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()\":]?([.][ ]|[ ]|\\))){3}/\n      // ---\n\n      // this tries to find sequences of 3 english words in a row (without any\n      // \"programming\" type syntax) this gives us a strong signal that we've\n      // TRULY found a comment - vs perhaps scanning with the wrong language.\n      // It's possible to find something that LOOKS like the start of the\n      // comment - but then if there is no readable text - good chance it is a\n      // false match and not a comment.\n      //\n      // for a visual example please see:\n      // https://github.com/highlightjs/highlight.js/issues/2827\n\n      begin: concat(\n        /[ ]+/, // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */\n        '(',\n        ENGLISH_WORD,\n        /[.]?[:]?([.][ ]|[ ])/,\n        '){3}') // look for 3 words in a row\n    }\n  );\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  scope: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  scope: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  scope: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  scope: \"regexp\",\n  begin: /\\/(?=[^/\\n]*\\/)/,\n  end: /\\/[gimuy]*/,\n  contains: [\n    BACKSLASH_ESCAPE,\n    {\n      begin: /\\[/,\n      end: /\\]/,\n      relevance: 0,\n      contains: [BACKSLASH_ESCAPE]\n    }\n  ]\n};\nconst TITLE_MODE = {\n  scope: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  scope: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  APOS_STRING_MODE: APOS_STRING_MODE,\n  BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n  BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n  BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n  COMMENT: COMMENT,\n  C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n  C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n  C_NUMBER_MODE: C_NUMBER_MODE,\n  C_NUMBER_RE: C_NUMBER_RE,\n  END_SAME_AS_BEGIN: END_SAME_AS_BEGIN,\n  HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n  IDENT_RE: IDENT_RE,\n  MATCH_NOTHING_RE: MATCH_NOTHING_RE,\n  METHOD_GUARD: METHOD_GUARD,\n  NUMBER_MODE: NUMBER_MODE,\n  NUMBER_RE: NUMBER_RE,\n  PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n  QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n  REGEXP_MODE: REGEXP_MODE,\n  RE_STARTERS_RE: RE_STARTERS_RE,\n  SHEBANG: SHEBANG,\n  TITLE_MODE: TITLE_MODE,\n  UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n  UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE\n});\n\n/**\n@typedef {import('highlight.js').CallbackResponse} CallbackResponse\n@typedef {import('highlight.js').CompilerExt} CompilerExt\n*/\n\n// Grammar extensions / plugins\n// See: https://github.com/highlightjs/highlight.js/issues/2833\n\n// Grammar extensions allow \"syntactic sugar\" to be added to the grammar modes\n// without requiring any underlying changes to the compiler internals.\n\n// `compileMatch` being the perfect small example of now allowing a grammar\n// author to write `match` when they desire to match a single expression rather\n// than being forced to use `begin`.  The extension then just moves `match` into\n// `begin` when it runs.  Ie, no features have been added, but we've just made\n// the experience of writing (and reading grammars) a little bit nicer.\n\n// ------\n\n// TODO: We need negative look-behind support to do this properly\n/**\n * Skip a match if it has a preceding dot\n *\n * This is used for `beginKeywords` to prevent matching expressions such as\n * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n * @param {RegExpMatchArray} match\n * @param {CallbackResponse} response\n */\nfunction skipIfHasPrecedingDot(match, response) {\n  const before = match.input[match.index - 1];\n  if (before === \".\") {\n    response.ignoreMatch();\n  }\n}\n\n/**\n *\n * @type {CompilerExt}\n */\nfunction scopeClassName(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.className !== undefined) {\n    mode.scope = mode.className;\n    delete mode.className;\n  }\n}\n\n/**\n * `beginKeywords` syntactic sugar\n * @type {CompilerExt}\n */\nfunction beginKeywords(mode, parent) {\n  if (!parent) return;\n  if (!mode.beginKeywords) return;\n\n  // for languages with keywords that include non-word characters checking for\n  // a word boundary is not sufficient, so instead we check for a word boundary\n  // or whitespace - this does no harm in any case since our keyword engine\n  // doesn't allow spaces in keywords anyways and we still check for the boundary\n  // first\n  mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?!\\\\.)(?=\\\\b|\\\\s)';\n  mode.__beforeBegin = skipIfHasPrecedingDot;\n  mode.keywords = mode.keywords || mode.beginKeywords;\n  delete mode.beginKeywords;\n\n  // prevents double relevance, the keywords themselves provide\n  // relevance, the mode doesn't need to double it\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 0;\n}\n\n/**\n * Allow `illegal` to contain an array of illegal values\n * @type {CompilerExt}\n */\nfunction compileIllegal(mode, _parent) {\n  if (!Array.isArray(mode.illegal)) return;\n\n  mode.illegal = either(...mode.illegal);\n}\n\n/**\n * `match` to match a single expression for readability\n * @type {CompilerExt}\n */\nfunction compileMatch(mode, _parent) {\n  if (!mode.match) return;\n  if (mode.begin || mode.end) throw new Error(\"begin & end are not supported with match\");\n\n  mode.begin = mode.match;\n  delete mode.match;\n}\n\n/**\n * provides the default 1 relevance to all modes\n * @type {CompilerExt}\n */\nfunction compileRelevance(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 1;\n}\n\n// allow beforeMatch to act as a \"qualifier\" for the match\n// the full match begin must be [beforeMatch][begin]\nconst beforeMatchExt = (mode, parent) => {\n  if (!mode.beforeMatch) return;\n  // starts conflicts with endsParent which we need to make sure the child\n  // rule is not matched multiple times\n  if (mode.starts) throw new Error(\"beforeMatch cannot be used with starts\");\n\n  const originalMode = Object.assign({}, mode);\n  Object.keys(mode).forEach((key) => { delete mode[key]; });\n\n  mode.keywords = originalMode.keywords;\n  mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));\n  mode.starts = {\n    relevance: 0,\n    contains: [\n      Object.assign(originalMode, { endsParent: true })\n    ]\n  };\n  mode.relevance = 0;\n\n  delete originalMode.beforeMatch;\n};\n\n// keywords that should have no default relevance value\nconst COMMON_KEYWORDS = [\n  'of',\n  'and',\n  'for',\n  'in',\n  'not',\n  'or',\n  'if',\n  'then',\n  'parent', // common variable name\n  'list', // common variable name\n  'value' // common variable name\n];\n\nconst DEFAULT_KEYWORD_SCOPE = \"keyword\";\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string|string[]> | Array<string>} rawKeywords\n * @param {boolean} caseInsensitive\n */\nfunction compileKeywords(rawKeywords, caseInsensitive, scopeName = DEFAULT_KEYWORD_SCOPE) {\n  /** @type {import(\"highlight.js/private\").KeywordDict} */\n  const compiledKeywords = Object.create(null);\n\n  // input can be a string of keywords, an array of keywords, or a object with\n  // named keys representing scopeName (which can then point to a string or array)\n  if (typeof rawKeywords === 'string') {\n    compileList(scopeName, rawKeywords.split(\" \"));\n  } else if (Array.isArray(rawKeywords)) {\n    compileList(scopeName, rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(scopeName) {\n      // collapse all our objects back into the parent object\n      Object.assign(\n        compiledKeywords,\n        compileKeywords(rawKeywords[scopeName], caseInsensitive, scopeName)\n      );\n    });\n  }\n  return compiledKeywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} scopeName\n   * @param {Array<string>} keywordList\n   */\n  function compileList(scopeName, keywordList) {\n    if (caseInsensitive) {\n      keywordList = keywordList.map(x => x.toLowerCase());\n    }\n    keywordList.forEach(function(keyword) {\n      const pair = keyword.split('|');\n      compiledKeywords[pair[0]] = [scopeName, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\n/*\n\nFor the reasoning behind this please see:\nhttps://github.com/highlightjs/highlight.js/issues/2880#issuecomment-747275419\n\n*/\n\n/**\n * @type {Record<string, boolean>}\n */\nconst seenDeprecations = {};\n\n/**\n * @param {string} message\n */\nconst error = (message) => {\n  console.error(message);\n};\n\n/**\n * @param {string} message\n * @param {any} args\n */\nconst warn = (message, ...args) => {\n  console.log(`WARN: ${message}`, ...args);\n};\n\n/**\n * @param {string} version\n * @param {string} message\n */\nconst deprecated = (version, message) => {\n  if (seenDeprecations[`${version}/${message}`]) return;\n\n  console.log(`Deprecated as of ${version}. ${message}`);\n  seenDeprecations[`${version}/${message}`] = true;\n};\n\n/* eslint-disable no-throw-literal */\n\n/**\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n*/\n\nconst MultiClassError = new Error();\n\n/**\n * Renumbers labeled scope names to account for additional inner match\n * groups that otherwise would break everything.\n *\n * Lets say we 3 match scopes:\n *\n *   { 1 => ..., 2 => ..., 3 => ... }\n *\n * So what we need is a clean match like this:\n *\n *   (a)(b)(c) => [ \"a\", \"b\", \"c\" ]\n *\n * But this falls apart with inner match groups:\n *\n * (a)(((b)))(c) => [\"a\", \"b\", \"b\", \"b\", \"c\" ]\n *\n * Our scopes are now \"out of alignment\" and we're repeating `b` 3 times.\n * What needs to happen is the numbers are remapped:\n *\n *   { 1 => ..., 2 => ..., 5 => ... }\n *\n * We also need to know that the ONLY groups that should be output\n * are 1, 2, and 5.  This function handles this behavior.\n *\n * @param {CompiledMode} mode\n * @param {Array<RegExp | string>} regexes\n * @param {{key: \"beginScope\"|\"endScope\"}} opts\n */\nfunction remapScopeNames(mode, regexes, { key }) {\n  let offset = 0;\n  const scopeNames = mode[key];\n  /** @type Record<number,boolean> */\n  const emit = {};\n  /** @type Record<number,string> */\n  const positions = {};\n\n  for (let i = 1; i <= regexes.length; i++) {\n    positions[i + offset] = scopeNames[i];\n    emit[i + offset] = true;\n    offset += countMatchGroups(regexes[i - 1]);\n  }\n  // we use _emit to keep track of which match groups are \"top-level\" to avoid double\n  // output from inside match groups\n  mode[key] = positions;\n  mode[key]._emit = emit;\n  mode[key]._multi = true;\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction beginMultiClass(mode) {\n  if (!Array.isArray(mode.begin)) return;\n\n  if (mode.skip || mode.excludeBegin || mode.returnBegin) {\n    error(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.beginScope !== \"object\" || mode.beginScope === null) {\n    error(\"beginScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.begin, { key: \"beginScope\" });\n  mode.begin = _rewriteBackreferences(mode.begin, { joinWith: \"\" });\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction endMultiClass(mode) {\n  if (!Array.isArray(mode.end)) return;\n\n  if (mode.skip || mode.excludeEnd || mode.returnEnd) {\n    error(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.endScope !== \"object\" || mode.endScope === null) {\n    error(\"endScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.end, { key: \"endScope\" });\n  mode.end = _rewriteBackreferences(mode.end, { joinWith: \"\" });\n}\n\n/**\n * this exists only to allow `scope: {}` to be used beside `match:`\n * Otherwise `beginScope` would necessary and that would look weird\n\n  {\n    match: [ /def/, /\\w+/ ]\n    scope: { 1: \"keyword\" , 2: \"title\" }\n  }\n\n * @param {CompiledMode} mode\n */\nfunction scopeSugar(mode) {\n  if (mode.scope && typeof mode.scope === \"object\" && mode.scope !== null) {\n    mode.beginScope = mode.scope;\n    delete mode.scope;\n  }\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction MultiClass(mode) {\n  scopeSugar(mode);\n\n  if (typeof mode.beginScope === \"string\") {\n    mode.beginScope = { _wrap: mode.beginScope };\n  }\n  if (typeof mode.endScope === \"string\") {\n    mode.endScope = { _wrap: mode.endScope };\n  }\n\n  beginMultiClass(mode);\n  endMultiClass(mode);\n}\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').CompiledLanguage} CompiledLanguage\n*/\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensitivity of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm'\n      + (language.case_insensitive ? 'i' : '')\n      + (language.unicodeRegex ? 'u' : '')\n      + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(_rewriteBackreferences(terminators, { joinWith: '|' }), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    resumingScanAtSamePosition() {\n      return this.regexIndex !== 0;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      let result = m.exec(s);\n\n      // The following is because we have no easy way to say \"resume scanning at the\n      // existing position but also skip the current rule ONLY\". What happens is\n      // all prior rules are also skipped which can result in matching the wrong\n      // thing. Example of matching \"booger\":\n\n      // our matcher is [string, \"booger\", number]\n      //\n      // ....booger....\n\n      // if \"booger\" is ignored then we'd really need a regex to scan from the\n      // SAME position for only: [string, number] but ignoring \"booger\" (if it\n      // was the first match), a simple resume would scan ahead who knows how\n      // far looking only for \"number\", ignoring potential string matches (or\n      // future \"booger\" matches that might be valid.)\n\n      // So what we do: We execute two matchers, one resuming at the same\n      // position, but the second full matcher starting at the position after:\n\n      //     /--- resume first regex match here (for [number])\n      //     |/---- full match here for [string, \"booger\", number]\n      //     vv\n      // ....booger....\n\n      // Which ever results in a match first is then used. So this 3-4 step\n      // process essentially allows us to say \"match at this position, excluding\n      // a prior rule that was ignored\".\n      //\n      // 1. Match \"booger\" first, ignore. Also proves that [string] does non match.\n      // 2. Resume matching for [number]\n      // 3. Match at index + 1 for [string, \"booger\", number]\n      // 4. If #2 and #3 result in matches, which came first?\n      if (this.resumingScanAtSamePosition()) {\n        if (result && result.index === this.lastIndex) ; else { // use the second matcher result\n          const m2 = this.getMatcher(0);\n          m2.lastIndex = this.lastIndex + 1;\n          result = m2.exec(s);\n        }\n      }\n\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) {\n          // wrap-around to considering all matches again\n          this.considerAll();\n        }\n      }\n\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminatorEnd) {\n      mm.addRule(mode.terminatorEnd, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.isCompiled) return cmode;\n\n    [\n      scopeClassName,\n      // do this early so compiler extensions generally don't have to worry about\n      // the distinction between match/begin\n      compileMatch,\n      MultiClass,\n      beforeMatchExt\n    ].forEach(ext => ext(mode, parent));\n\n    language.compilerExtensions.forEach(ext => ext(mode, parent));\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    [\n      beginKeywords,\n      // do this later so compiler extensions that come earlier have access to the\n      // raw array if they wanted to perhaps manipulate it, etc.\n      compileIllegal,\n      // default to 1 relevance if not specified\n      compileRelevance\n    ].forEach(ext => ext(mode, parent));\n\n    mode.isCompiled = true;\n\n    let keywordPattern = null;\n    if (typeof mode.keywords === \"object\" && mode.keywords.$pattern) {\n      // we need a copy because keywords might be compiled multiple times\n      // so we can't go deleting $pattern from the original on the first\n      // pass\n      mode.keywords = Object.assign({}, mode.keywords);\n      keywordPattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n    keywordPattern = keywordPattern || /\\w+/;\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    cmode.keywordPatternRe = langRe(keywordPattern, true);\n\n    if (parent) {\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(cmode.begin);\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(cmode.end);\n      cmode.terminatorEnd = source(cmode.end) || '';\n      if (mode.endsWithParent && parent.terminatorEnd) {\n        cmode.terminatorEnd += (mode.end ? '|' : '') + parent.terminatorEnd;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(/** @type {RegExp | string} */ (mode.illegal));\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expandOrCloneMode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  if (!language.compilerExtensions) language.compilerExtensions = [];\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n\n  // we need a null object, which inherit will guarantee\n  language.classNameAliases = inherit$1(language.classNameAliases || {});\n\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expandOrCloneMode(mode) {\n  if (mode.variants && !mode.cachedVariants) {\n    mode.cachedVariants = mode.variants.map(function(variant) {\n      return inherit$1(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cachedVariants) {\n    return mode.cachedVariants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit$1(mode, { starts: mode.starts ? inherit$1(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit$1(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\nvar version = \"11.11.1\";\n\nclass HTMLInjectionError extends Error {\n  constructor(reason, html) {\n    super(reason);\n    this.name = \"HTMLInjectionError\";\n    this.html = html;\n  }\n}\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').CompiledScope} CompiledScope\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSApi} HLJSApi\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').PluginEvent} PluginEvent\n@typedef {import('highlight.js').HLJSOptions} HLJSOptions\n@typedef {import('highlight.js').LanguageFn} LanguageFn\n@typedef {import('highlight.js').HighlightedHTMLElement} HighlightedHTMLElement\n@typedef {import('highlight.js').BeforeHighlightContext} BeforeHighlightContext\n@typedef {import('highlight.js/private').MatchType} MatchType\n@typedef {import('highlight.js/private').KeywordData} KeywordData\n@typedef {import('highlight.js/private').EnhancedMatch} EnhancedMatch\n@typedef {import('highlight.js/private').AnnotatedError} AnnotatedError\n@typedef {import('highlight.js').AutoHighlightResult} AutoHighlightResult\n@typedef {import('highlight.js').HighlightOptions} HighlightOptions\n@typedef {import('highlight.js').HighlightResult} HighlightResult\n*/\n\n\nconst escape = escapeHTML;\nconst inherit = inherit$1;\nconst NO_MATCH = Symbol(\"nomatch\");\nconst MAX_KEYWORD_HITS = 7;\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  const languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  const aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  const plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  let SAFE_MODE = true;\n  const LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  let options = {\n    ignoreUnescapedHTML: false,\n    throwUnescapedHTML: false,\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    cssSelector: 'pre code',\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    let classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      const language = getLanguage(match[1]);\n      if (!language) {\n        warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * OLD API\n   * highlight(lang, code, ignoreIllegals, continuation)\n   *\n   * NEW API\n   * highlight(code, {lang, ignoreIllegals})\n   *\n   * @param {string} codeOrLanguageName - the language to use for highlighting\n   * @param {string | HighlightOptions} optionsOrCode - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {CompiledMode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(codeOrLanguageName, optionsOrCode, ignoreIllegals) {\n    let code = \"\";\n    let languageName = \"\";\n    if (typeof optionsOrCode === \"object\") {\n      code = codeOrLanguageName;\n      ignoreIllegals = optionsOrCode.ignoreIllegals;\n      languageName = optionsOrCode.language;\n    } else {\n      // old API\n      deprecated(\"10.7.0\", \"highlight(lang, code, ...args) has been deprecated.\");\n      deprecated(\"10.7.0\", \"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\");\n      languageName = codeOrLanguageName;\n      code = optionsOrCode;\n    }\n\n    // https://github.com/highlightjs/highlight.js/issues/3149\n    // eslint-disable-next-line no-undefined\n    if (ignoreIllegals === undefined) { ignoreIllegals = true; }\n\n    /** @type {BeforeHighlightContext} */\n    const context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    const result = context.result\n      ? context.result\n      : _highlight(context.language, context.code, ignoreIllegals);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} codeToHighlight - the code to highlight\n   * @param {boolean?} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {CompiledMode?} [continuation] - current continuation mode, if any\n   * @returns {HighlightResult} - result of the highlight operation\n  */\n  function _highlight(languageName, codeToHighlight, ignoreIllegals, continuation) {\n    const keywordHits = Object.create(null);\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {string} matchText - the textual match\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, matchText) {\n      return mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(modeBuffer);\n        return;\n      }\n\n      let lastIndex = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(modeBuffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += modeBuffer.substring(lastIndex, match.index);\n        const word = language.case_insensitive ? match[0].toLowerCase() : match[0];\n        const data = keywordData(top, word);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          keywordHits[word] = (keywordHits[word] || 0) + 1;\n          if (keywordHits[word] <= MAX_KEYWORD_HITS) relevance += keywordRelevance;\n          if (kind.startsWith(\"_\")) {\n            // _ implied for relevance only, do not highlight\n            // by applying a class name\n            buf += match[0];\n          } else {\n            const cssClass = language.classNameAliases[kind] || kind;\n            emitKeyword(match[0], cssClass);\n          }\n        } else {\n          buf += match[0];\n        }\n        lastIndex = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(modeBuffer);\n      }\n      buf += modeBuffer.substring(lastIndex);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (modeBuffer === \"\") return;\n      /** @type HighlightResult */\n      let result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(modeBuffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = /** @type {CompiledMode} */ (result._top);\n      } else {\n        result = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.__addSublanguage(result._emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      modeBuffer = '';\n    }\n\n    /**\n     * @param {string} text\n     * @param {string} scope\n     */\n    function emitKeyword(keyword, scope) {\n      if (keyword === \"\") return;\n\n      emitter.startScope(scope);\n      emitter.addText(keyword);\n      emitter.endScope();\n    }\n\n    /**\n     * @param {CompiledScope} scope\n     * @param {RegExpMatchArray} match\n     */\n    function emitMultiClass(scope, match) {\n      let i = 1;\n      const max = match.length - 1;\n      while (i <= max) {\n        if (!scope._emit[i]) { i++; continue; }\n        const klass = language.classNameAliases[scope[i]] || scope[i];\n        const text = match[i];\n        if (klass) {\n          emitKeyword(text, klass);\n        } else {\n          modeBuffer = text;\n          processKeywords();\n          modeBuffer = \"\";\n        }\n        i++;\n      }\n    }\n\n    /**\n     * @param {CompiledMode} mode - new mode to start\n     * @param {RegExpMatchArray} match\n     */\n    function startNewMode(mode, match) {\n      if (mode.scope && typeof mode.scope === \"string\") {\n        emitter.openNode(language.classNameAliases[mode.scope] || mode.scope);\n      }\n      if (mode.beginScope) {\n        // beginScope just wraps the begin match itself in a scope\n        if (mode.beginScope._wrap) {\n          emitKeyword(modeBuffer, language.classNameAliases[mode.beginScope._wrap] || mode.beginScope._wrap);\n          modeBuffer = \"\";\n        } else if (mode.beginScope._multi) {\n          // at this point modeBuffer should just be the match\n          emitMultiClass(mode.beginScope, match);\n          modeBuffer = \"\";\n        }\n      }\n\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.isMatchIgnored) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexes to potentially match here, so we move the cursor forward one\n        // space\n        modeBuffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        resumeScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      const lexeme = match[0];\n      const newMode = match.rule;\n\n      const resp = new Response(newMode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [newMode.__beforeBegin, newMode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.isMatchIgnored) return doIgnore(lexeme);\n      }\n\n      if (newMode.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (newMode.excludeBegin) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (!newMode.returnBegin && !newMode.excludeBegin) {\n          modeBuffer = lexeme;\n        }\n      }\n      startNewMode(newMode, match);\n      return newMode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      const lexeme = match[0];\n      const matchPlusRemainder = codeToHighlight.substring(match.index);\n\n      const endMode = endOfMode(top, match, matchPlusRemainder);\n      if (!endMode) { return NO_MATCH; }\n\n      const origin = top;\n      if (top.endScope && top.endScope._wrap) {\n        processBuffer();\n        emitKeyword(lexeme, top.endScope._wrap);\n      } else if (top.endScope && top.endScope._multi) {\n        processBuffer();\n        emitMultiClass(top.endScope, match);\n      } else if (origin.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          modeBuffer = lexeme;\n        }\n      }\n      do {\n        if (top.scope) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== endMode.parent);\n      if (endMode.starts) {\n        startNewMode(endMode.starts, match);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      const list = [];\n      for (let current = top; current !== language; current = current.parent) {\n        if (current.scope) {\n          list.unshift(current.scope);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    let lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      const lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      modeBuffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        modeBuffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error(`0 width match regex (${languageName})`);\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.scope || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        const processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        modeBuffer += \"\\n\";\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  An potential end match that was\n      triggered but could not be completed.  IE, `doEndMatch` returned NO_MATCH.\n      (this could be because a callback requests the match be ignored, etc)\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      modeBuffer += lexeme;\n      return lexeme.length;\n    }\n\n    const language = getLanguage(languageName);\n    if (!language) {\n      error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    const md = compileLanguage(language);\n    let result = '';\n    /** @type {CompiledMode} */\n    let top = continuation || md;\n    /** @type Record<string,CompiledMode> */\n    const continuations = {}; // keep continuations for sub-languages\n    const emitter = new options.__emitter(options);\n    processContinuations();\n    let modeBuffer = '';\n    let relevance = 0;\n    let index = 0;\n    let iterations = 0;\n    let resumeScanAtSamePosition = false;\n\n    try {\n      if (!language.__emitTokens) {\n        top.matcher.considerAll();\n\n        for (;;) {\n          iterations++;\n          if (resumeScanAtSamePosition) {\n            // only regexes not matched previously will now be\n            // considered for a potential match\n            resumeScanAtSamePosition = false;\n          } else {\n            top.matcher.considerAll();\n          }\n          top.matcher.lastIndex = index;\n\n          const match = top.matcher.exec(codeToHighlight);\n          // console.log(\"match\", match[0], match.rule && match.rule.begin)\n\n          if (!match) break;\n\n          const beforeMatch = codeToHighlight.substring(index, match.index);\n          const processedCount = processLexeme(beforeMatch, match);\n          index = match.index + processedCount;\n        }\n        processLexeme(codeToHighlight.substring(index));\n      } else {\n        language.__emitTokens(codeToHighlight, emitter);\n      }\n\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        language: languageName,\n        value: result,\n        relevance,\n        illegal: false,\n        _emitter: emitter,\n        _top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: true,\n          relevance: 0,\n          _illegalBy: {\n            message: err.message,\n            index,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode,\n            resultSoFar: result\n          },\n          _emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: false,\n          relevance: 0,\n          errorRaised: err,\n          _emitter: emitter,\n          _top: top\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      value: escape(code),\n      illegal: false,\n      relevance: 0,\n      _top: PLAINTEXT_LANGUAGE,\n      _emitter: new options.__emitter(options)\n    };\n    result._emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - secondBest (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    const plaintext = justTextHighlightResult(code);\n\n    const results = languageSubset.filter(getLanguage).filter(autoDetection).map(name =>\n      _highlight(name, code, false)\n    );\n    results.unshift(plaintext); // plaintext is always an option\n\n    const sorted = results.sort((a, b) => {\n      // sort base on relevance\n      if (a.relevance !== b.relevance) return b.relevance - a.relevance;\n\n      // always award the tie to the base language\n      // ie if C++ and Arduino are tied, it's more likely to be C++\n      if (a.language && b.language) {\n        if (getLanguage(a.language).supersetOf === b.language) {\n          return 1;\n        } else if (getLanguage(b.language).supersetOf === a.language) {\n          return -1;\n        }\n      }\n\n      // otherwise say they are equal, which has the effect of sorting on\n      // relevance while preserving the original ordering - which is how ties\n      // have historically been settled, ie the language that comes first always\n      // wins in the case of a tie\n      return 0;\n    });\n\n    const [best, secondBest] = sorted;\n\n    /** @type {AutoHighlightResult} */\n    const result = best;\n    result.secondBest = secondBest;\n\n    return result;\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {HTMLElement} element\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function updateClassName(element, currentLang, resultLang) {\n    const language = (currentLang && aliases[currentLang]) || resultLang;\n\n    element.classList.add(\"hljs\");\n    element.classList.add(`language-${language}`);\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightElement(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightElement\",\n      { el: element, language });\n\n    if (element.dataset.highlighted) {\n      console.log(\"Element previously highlighted. To highlight again, first unset `dataset.highlighted`.\", element);\n      return;\n    }\n\n    // we should be all text, no child nodes (unescaped HTML) - this is possibly\n    // an HTML injection attack - it's likely too late if this is already in\n    // production (the code has likely already done its damage by the time\n    // we're seeing it)... but we yell loudly about this so that hopefully it's\n    // more likely to be caught in development before making it to production\n    if (element.children.length > 0) {\n      if (!options.ignoreUnescapedHTML) {\n        console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\");\n        console.warn(\"https://github.com/highlightjs/highlight.js/wiki/security\");\n        console.warn(\"The element with unescaped HTML:\");\n        console.warn(element);\n      }\n      if (options.throwUnescapedHTML) {\n        const err = new HTMLInjectionError(\n          \"One of your code blocks includes unescaped HTML.\",\n          element.innerHTML\n        );\n        throw err;\n      }\n    }\n\n    node = element;\n    const text = node.textContent;\n    const result = language ? highlight(text, { language, ignoreIllegals: true }) : highlightAuto(text);\n\n    element.innerHTML = result.value;\n    element.dataset.highlighted = \"yes\";\n    updateClassName(element, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relevance: result.relevance\n    };\n    if (result.secondBest) {\n      element.secondBest = {\n        language: result.secondBest.language,\n        relevance: result.secondBest.relevance\n      };\n    }\n\n    fire(\"after:highlightElement\", { el: element, result, text });\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {Partial<HLJSOptions>} userOptions\n   */\n  function configure(userOptions) {\n    options = inherit(options, userOptions);\n  }\n\n  // TODO: remove v12, deprecated\n  const initHighlighting = () => {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlighting() deprecated.  Use highlightAll() now.\");\n  };\n\n  // TODO: remove v12, deprecated\n  function initHighlightingOnLoad() {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlightingOnLoad() deprecated.  Use highlightAll() now.\");\n  }\n\n  let wantsHighlight = false;\n\n  /**\n   * auto-highlights all pre>code elements on the page\n   */\n  function highlightAll() {\n    function boot() {\n      // if a highlight was requested before DOM was loaded, do now\n      highlightAll();\n    }\n\n    // if we are called too early in the loading process\n    if (document.readyState === \"loading\") {\n      // make sure the event listener is only added once\n      if (!wantsHighlight) {\n        window.addEventListener('DOMContentLoaded', boot, false);\n      }\n      wantsHighlight = true;\n      return;\n    }\n\n    const blocks = document.querySelectorAll(options.cssSelector);\n    blocks.forEach(highlightElement);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    let lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error$1) {\n      error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error$1; } else { error(error$1); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * Remove a language grammar module\n   *\n   * @param {string} languageName\n   */\n  function unregisterLanguage(languageName) {\n    delete languages[languageName];\n    for (const alias of Object.keys(aliases)) {\n      if (aliases[alias] === languageName) {\n        delete aliases[alias];\n      }\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias.toLowerCase()] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    const lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * Upgrades the old highlightBlock plugins to the new\n   * highlightElement API\n   * @param {HLJSPlugin} plugin\n   */\n  function upgradePluginAPI(plugin) {\n    // TODO: remove with v12\n    if (plugin[\"before:highlightBlock\"] && !plugin[\"before:highlightElement\"]) {\n      plugin[\"before:highlightElement\"] = (data) => {\n        plugin[\"before:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n    if (plugin[\"after:highlightBlock\"] && !plugin[\"after:highlightElement\"]) {\n      plugin[\"after:highlightElement\"] = (data) => {\n        plugin[\"after:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    upgradePluginAPI(plugin);\n    plugins.push(plugin);\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function removePlugin(plugin) {\n    const index = plugins.indexOf(plugin);\n    if (index !== -1) {\n      plugins.splice(index, 1);\n    }\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    const cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /**\n   * DEPRECATED\n   * @param {HighlightedHTMLElement} el\n   */\n  function deprecateHighlightBlock(el) {\n    deprecated(\"10.7.0\", \"highlightBlock will be removed entirely in v12.0\");\n    deprecated(\"10.7.0\", \"Please use highlightElement now.\");\n\n    return highlightElement(el);\n  }\n\n  /* Interface definition */\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    highlightAll,\n    highlightElement,\n    // TODO: Remove with v12 API\n    highlightBlock: deprecateHighlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    unregisterLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    autoDetection,\n    inherit,\n    addPlugin,\n    removePlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  hljs.regex = {\n    concat: concat,\n    lookahead: lookahead,\n    either: either,\n    optional: optional,\n    anyNumberOfTimes: anyNumberOfTimes\n  };\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreeze(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexes into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// Other names for the variable may break build script\nconst highlight = HLJS({});\n\n// returns a new instance of the highlighter to be used for extensions\n// check https://github.com/wooorm/lowlight/issues/47\nhighlight.newInstance = () => HLJS({});\n\nmodule.exports = highlight;\nhighlight.HighlightJS = highlight;\nhighlight.default = highlight;\n","__webpack_require__.rv = () => (\"1.4.4\")","__webpack_require__.ruid = \"bundler=rspack@1.4.4\";\n","/**\n * marked v13.0.3 - a markdown parser\n * Copyright (c) 2011-2024, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null,\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape$1(html, encode) {\n    if (encode) {\n        if (escapeTest.test(html)) {\n            return html.replace(escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (escapeTestNoEncode.test(html)) {\n            return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\nfunction unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, (_, n) => {\n        n = n.toLowerCase();\n        if (n === 'colon')\n            return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        },\n    };\n    return obj;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(/%25/g, '%');\n    }\n    catch {\n        return null;\n    }\n    return href;\n}\nconst noopTest = { exec: () => null };\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(/ \\|/);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n    const href = link.href;\n    const title = link.title ? escape$1(link.title) : null;\n    const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text),\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text: escape$1(text),\n    };\n}\nfunction indentCodeCompensation(raw, text) {\n    const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(/^\\s+/);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0],\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(/^ {1,4}/gm, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text,\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '');\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text,\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (/#$/.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || / $/.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: rtrim(cap[0], '\\n'),\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            let lines = rtrim(cap[0], '\\n').split('\\n');\n            let raw = '';\n            let text = '';\n            const tokens = [];\n            while (lines.length > 0) {\n                let inBlockquote = false;\n                const currentLines = [];\n                let i;\n                for (i = 0; i < lines.length; i++) {\n                    // get lines up to a continuation\n                    if (/^ {0,3}>/.test(lines[i])) {\n                        currentLines.push(lines[i]);\n                        inBlockquote = true;\n                    }\n                    else if (!inBlockquote) {\n                        currentLines.push(lines[i]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                lines = lines.slice(i);\n                const currentRaw = currentLines.join('\\n');\n                const currentText = currentRaw\n                    // precede setext continuation with 4 spaces so it isn't a setext\n                    .replace(/\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g, '\\n    $1')\n                    .replace(/^ {0,3}>[ \\t]?/gm, '');\n                raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n                text = text ? `${text}\\n${currentText}` : currentText;\n                // parse blockquote lines as top level tokens\n                // merge paragraphs if this is a continuation\n                const top = this.lexer.state.top;\n                this.lexer.state.top = true;\n                this.lexer.blockTokens(currentText, tokens, true);\n                this.lexer.state.top = top;\n                // if there is no continuation then we are done\n                if (lines.length === 0) {\n                    break;\n                }\n                const lastToken = tokens[tokens.length - 1];\n                if (lastToken?.type === 'code') {\n                    // blockquote continuation cannot be preceded by a code block\n                    break;\n                }\n                else if (lastToken?.type === 'blockquote') {\n                    // include continuation in nested blockquote\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.blockquote(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n                    break;\n                }\n                else if (lastToken?.type === 'list') {\n                    // include continuation in nested list\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.list(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n                    lines = newText.substring(tokens[tokens.length - 1].raw.length).split('\\n');\n                    continue;\n                }\n            }\n            return {\n                type: 'blockquote',\n                raw,\n                tokens,\n                text,\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: [],\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                let raw = '';\n                let itemContents = '';\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let blankLine = !line.trim();\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else if (blankLine) {\n                    indent = cap[1].length + 1;\n                }\n                else {\n                    indent = cap[2].search(/[^ ]/); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                if (blankLine && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n                    const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n                    const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n                    const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(src)) {\n                            break;\n                        }\n                        if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLine.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.search(/[^ ]/) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLine.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (/\\n *\\n *$/.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = /^\\[[ xX]\\] /.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: [],\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            list.items[list.items.length - 1].raw = list.items[list.items.length - 1].raw.trimEnd();\n            list.items[list.items.length - 1].text = list.items[list.items.length - 1].text.trimEnd();\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0],\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n            const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title,\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!/[:|]/.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(/^\\||\\| *$/g, '').split('|');\n        const rows = cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: [],\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (/^ *-+: *$/.test(align)) {\n                item.align.push('right');\n            }\n            else if (/^ *:-+: *$/.test(align)) {\n                item.align.push('center');\n            }\n            else if (/^ *:-+ *$/.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (let i = 0; i < headers.length; i++) {\n            item.header.push({\n                text: headers[i],\n                tokens: this.lexer.inline(headers[i]),\n                header: true,\n                align: item.align[i],\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell),\n                    header: false,\n                    align: item.align[i],\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1]),\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0]),\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: escape$1(cap[1]),\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0],\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(/>$/.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (/^</.test(href)) {\n                if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title,\n            }, cap[0], this.lexer);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text,\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text),\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text),\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(/\\n/g, ' ');\n            const hasNonSpaceChars = /[^ ]/.test(text);\n            const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            text = escape$1(text, true);\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text,\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0],\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2]),\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[1]);\n                href = 'mailto:' + text;\n            }\n            else {\n                text = escape$1(cap[1]);\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[0]);\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = escape$1(cap[0]);\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            let text;\n            if (this.lexer.state.inRawBlock) {\n                text = cap[0];\n            }\n            else {\n                text = escape$1(cap[0]);\n            }\n            return {\n                type: 'text',\n                raw: cap[0],\n                text,\n            };\n        }\n    }\n}\n\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?: *(?:\\n|$))+/;\nconst blockCode = /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheading = edit(/^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, / {4}/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n    + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText,\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', ' {4}[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex(),\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex(),\n};\n/**\n * Inline-Level Grammar\n */\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = '\\\\p{P}\\\\p{S}';\nconst punctuation = edit(/^((?![*_])[\\spunctuation])/, 'u')\n    .replace(/punctuation/g, _punctuation).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelim = edit(/^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)[punct](\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?!\\\\*)(?=[punct\\\\s]|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)[punct\\\\s](\\\\*+)(?=[^punct\\\\s])' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=[punct])' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)[punct](\\\\*+)(?!\\\\*)(?=[punct])' // (5) #***# can be either Left or Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?=[^punct\\\\s])', 'gu') // (6) a***a can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)[punct](_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|[^punct\\\\s](_+)(?!_)(?=[punct\\\\s]|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)[punct\\\\s](_+)(?=[^punct\\\\s])' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=[punct])' // (4) ___# can only be Left Delimiter\n    + '|(?!_)[punct](_+)(?!_)(?=[punct])', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\([punct])/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest,\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    escape: edit(escape).replace('])', '~|])').getRegex(),\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/,\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex(),\n};\n/**\n * exports\n */\nconst block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic,\n};\nconst inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic,\n};\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true,\n        };\n        const rules = {\n            block: block.normal,\n            inline: inline.normal,\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline,\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src\n            .replace(/\\r\\n|\\r/g, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = [], lastParagraphClipped = false) {\n        if (this.options.pedantic) {\n            src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n        }\n        else {\n            src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n                return leading + '    '.repeat(tabs.length);\n            });\n        }\n        let token;\n        let lastToken;\n        let cutSrc;\n        while (src) {\n            if (this.options.extensions\n                && this.options.extensions.block\n                && this.options.extensions.block.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.length === 1 && tokens.length > 0) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    tokens[tokens.length - 1].raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title,\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                lastToken = tokens[tokens.length - 1];\n                if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = (cutSrc.length !== src.length);\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        let token, lastToken, cutSrc;\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match;\n        let keepPrevChar, prevChar;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            // extensions\n            if (this.options.extensions\n                && this.options.extensions.inline\n                && this.options.extensions.inline.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    parser; // set by the parser\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(token) {\n        return '';\n    }\n    code({ text, lang, escaped }) {\n        const langString = (lang || '').match(/^\\S*/)?.[0];\n        const code = text.replace(/\\n$/, '') + '\\n';\n        if (!langString) {\n            return '<pre><code>'\n                + (escaped ? code : escape$1(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape$1(langString)\n            + '\">'\n            + (escaped ? code : escape$1(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote({ tokens }) {\n        const body = this.parser.parse(tokens);\n        return `<blockquote>\\n${body}</blockquote>\\n`;\n    }\n    html({ text }) {\n        return text;\n    }\n    heading({ tokens, depth }) {\n        return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n    }\n    hr(token) {\n        return '<hr>\\n';\n    }\n    list(token) {\n        const ordered = token.ordered;\n        const start = token.start;\n        let body = '';\n        for (let j = 0; j < token.items.length; j++) {\n            const item = token.items[j];\n            body += this.listitem(item);\n        }\n        const type = ordered ? 'ol' : 'ul';\n        const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(item) {\n        let itemBody = '';\n        if (item.task) {\n            const checkbox = this.checkbox({ checked: !!item.checked });\n            if (item.loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                    }\n                }\n                else {\n                    item.tokens.unshift({\n                        type: 'text',\n                        raw: checkbox + ' ',\n                        text: checkbox + ' ',\n                    });\n                }\n            }\n            else {\n                itemBody += checkbox + ' ';\n            }\n        }\n        itemBody += this.parser.parse(item.tokens, !!item.loose);\n        return `<li>${itemBody}</li>\\n`;\n    }\n    checkbox({ checked }) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph({ tokens }) {\n        return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n    }\n    table(token) {\n        let header = '';\n        // header\n        let cell = '';\n        for (let j = 0; j < token.header.length; j++) {\n            cell += this.tablecell(token.header[j]);\n        }\n        header += this.tablerow({ text: cell });\n        let body = '';\n        for (let j = 0; j < token.rows.length; j++) {\n            const row = token.rows[j];\n            cell = '';\n            for (let k = 0; k < row.length; k++) {\n                cell += this.tablecell(row[k]);\n            }\n            body += this.tablerow({ text: cell });\n        }\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow({ text }) {\n        return `<tr>\\n${text}</tr>\\n`;\n    }\n    tablecell(token) {\n        const content = this.parser.parseInline(token.tokens);\n        const type = token.header ? 'th' : 'td';\n        const tag = token.align\n            ? `<${type} align=\"${token.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong({ tokens }) {\n        return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n    }\n    em({ tokens }) {\n        return `<em>${this.parser.parseInline(tokens)}</em>`;\n    }\n    codespan({ text }) {\n        return `<code>${text}</code>`;\n    }\n    br(token) {\n        return '<br>';\n    }\n    del({ tokens }) {\n        return `<del>${this.parser.parseInline(tokens)}</del>`;\n    }\n    link({ href, title, tokens }) {\n        const text = this.parser.parseInline(tokens);\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image({ href, title, text }) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${title}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(token) {\n        return 'tokens' in token && token.tokens ? this.parser.parseInline(token.tokens) : token.text;\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong({ text }) {\n        return text;\n    }\n    em({ text }) {\n        return text;\n    }\n    codespan({ text }) {\n        return text;\n    }\n    del({ text }) {\n        return text;\n    }\n    html({ text }) {\n        return text;\n    }\n    text({ text }) {\n        return text;\n    }\n    link({ text }) {\n        return '' + text;\n    }\n    image({ text }) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.renderer.parser = this;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[anyToken.type]) {\n                const genericToken = anyToken;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'space': {\n                    out += this.renderer.space(token);\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr(token);\n                    continue;\n                }\n                case 'heading': {\n                    out += this.renderer.heading(token);\n                    continue;\n                }\n                case 'code': {\n                    out += this.renderer.code(token);\n                    continue;\n                }\n                case 'table': {\n                    out += this.renderer.table(token);\n                    continue;\n                }\n                case 'blockquote': {\n                    out += this.renderer.blockquote(token);\n                    continue;\n                }\n                case 'list': {\n                    out += this.renderer.list(token);\n                    continue;\n                }\n                case 'html': {\n                    out += this.renderer.html(token);\n                    continue;\n                }\n                case 'paragraph': {\n                    out += this.renderer.paragraph(token);\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = this.renderer.text(textToken);\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + this.renderer.text(textToken);\n                    }\n                    if (top) {\n                        out += this.renderer.paragraph({\n                            type: 'paragraph',\n                            raw: body,\n                            text: body,\n                            tokens: [{ type: 'text', raw: body, text: body }],\n                        });\n                    }\n                    else {\n                        out += body;\n                    }\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[anyToken.type]) {\n                const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'escape': {\n                    out += renderer.text(token);\n                    break;\n                }\n                case 'html': {\n                    out += renderer.html(token);\n                    break;\n                }\n                case 'link': {\n                    out += renderer.link(token);\n                    break;\n                }\n                case 'image': {\n                    out += renderer.image(token);\n                    break;\n                }\n                case 'strong': {\n                    out += renderer.strong(token);\n                    break;\n                }\n                case 'em': {\n                    out += renderer.em(token);\n                    break;\n                }\n                case 'codespan': {\n                    out += renderer.codespan(token);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br(token);\n                    break;\n                }\n                case 'del': {\n                    out += renderer.del(token);\n                    break;\n                }\n                case 'text': {\n                    out += renderer.text(token);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens',\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.#parseMarkdown(_Lexer.lex, _Parser.parse);\n    parseInline = this.#parseMarkdown(_Lexer.lexInline, _Parser.parseInline);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (['options', 'parser'].includes(prop)) {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    let rendererFunc = pack.renderer[rendererProp];\n                    if (!pack.useNewRenderer) {\n                        // TODO: Remove this in next major version\n                        rendererFunc = this.#convertRendererFunction(rendererFunc, rendererProp, renderer);\n                    }\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (prop === 'options') {\n                        // ignore options property\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    // TODO: Remove this in next major release\n    #convertRendererFunction(func, prop, renderer) {\n        switch (prop) {\n            case 'heading':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, renderer.parser.parseInline(token.tokens), token.depth, unescape(renderer.parser.parseInline(token.tokens, renderer.parser.textRenderer)));\n                };\n            case 'code':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, token.text, token.lang, !!token.escaped);\n                };\n            case 'table':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    let header = '';\n                    // header\n                    let cell = '';\n                    for (let j = 0; j < token.header.length; j++) {\n                        cell += this.tablecell({\n                            text: token.header[j].text,\n                            tokens: token.header[j].tokens,\n                            header: true,\n                            align: token.align[j],\n                        });\n                    }\n                    header += this.tablerow({ text: cell });\n                    let body = '';\n                    for (let j = 0; j < token.rows.length; j++) {\n                        const row = token.rows[j];\n                        cell = '';\n                        for (let k = 0; k < row.length; k++) {\n                            cell += this.tablecell({\n                                text: row[k].text,\n                                tokens: row[k].tokens,\n                                header: false,\n                                align: token.align[k],\n                            });\n                        }\n                        body += this.tablerow({ text: cell });\n                    }\n                    return func.call(this, header, body);\n                };\n            case 'blockquote':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    const body = this.parser.parse(token.tokens);\n                    return func.call(this, body);\n                };\n            case 'list':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    const ordered = token.ordered;\n                    const start = token.start;\n                    const loose = token.loose;\n                    let body = '';\n                    for (let j = 0; j < token.items.length; j++) {\n                        const item = token.items[j];\n                        const checked = item.checked;\n                        const task = item.task;\n                        let itemBody = '';\n                        if (item.task) {\n                            const checkbox = this.checkbox({ checked: !!checked });\n                            if (loose) {\n                                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                                    }\n                                }\n                                else {\n                                    item.tokens.unshift({\n                                        type: 'text',\n                                        text: checkbox + ' ',\n                                    });\n                                }\n                            }\n                            else {\n                                itemBody += checkbox + ' ';\n                            }\n                        }\n                        itemBody += this.parser.parse(item.tokens, loose);\n                        body += this.listitem({\n                            type: 'list_item',\n                            raw: itemBody,\n                            text: itemBody,\n                            task,\n                            checked: !!checked,\n                            loose,\n                            tokens: item.tokens,\n                        });\n                    }\n                    return func.call(this, body, ordered, start);\n                };\n            case 'html':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, token.text, token.block);\n                };\n            case 'paragraph':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, this.parser.parseInline(token.tokens));\n                };\n            case 'escape':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, token.text);\n                };\n            case 'link':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, token.href, token.title, this.parser.parseInline(token.tokens));\n                };\n            case 'image':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, token.href, token.title, token.text);\n                };\n            case 'strong':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, this.parser.parseInline(token.tokens));\n                };\n            case 'em':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, this.parser.parseInline(token.tokens));\n                };\n            case 'codespan':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, token.text);\n                };\n            case 'del':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, this.parser.parseInline(token.tokens));\n                };\n            case 'text':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, token.text);\n                };\n            // do nothing\n        }\n        return func;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    #parseMarkdown(lexer, parser) {\n        return (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            // Show warning if an extension set async to true but the parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                if (!opt.silent) {\n                    console.warn('marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.');\n                }\n                opt.async = true;\n            }\n            const throwError = this.#onError(!!opt.silent, !!opt.async);\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n            }\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n    }\n    #onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape$1(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","/*! @license DOMPurify 3.2.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.6/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp|matrix):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.6';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : clone({});\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : clone({});\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (SAFE_FOR_XML && currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w!]/g, currentNode.innerHTML) && regExpTest(/<[/\\w!]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      const initValue = attrValue;\n      let value = name === 'value' ? initValue : stringTrim(initValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      if (value !== initValue) {\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {\n          _removeAttribute(name, currentNode);\n        }\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","export function markedHighlight(options) {\n  if (typeof options === 'function') {\n    options = {\n      highlight: options,\n    };\n  }\n\n  if (!options || typeof options.highlight !== 'function') {\n    throw new Error('Must provide highlight function');\n  }\n\n  if (typeof options.langPrefix !== 'string') {\n    options.langPrefix = 'language-';\n  }\n\n  if (typeof options.emptyLangClass !== 'string') {\n    options.emptyLangClass = '';\n  }\n\n  return {\n    async: !!options.async,\n    walkTokens(token) {\n      if (token.type !== 'code') {\n        return;\n      }\n\n      const lang = getLang(token.lang);\n\n      if (options.async) {\n        return Promise.resolve(options.highlight(token.text, lang, token.lang || '')).then(updateToken(token));\n      }\n\n      const code = options.highlight(token.text, lang, token.lang || '');\n      if (code instanceof Promise) {\n        throw new Error('markedHighlight is not set to async but the highlight function is async. Set the async option to true on markedHighlight to await the async highlight function.');\n      }\n      updateToken(token)(code);\n    },\n    useNewRenderer: true,\n    renderer: {\n      code(code, infoString, escaped) {\n        // istanbul ignore next\n        if (typeof code === 'object') {\n          escaped = code.escaped;\n          infoString = code.lang;\n          code = code.text;\n        }\n        const lang = getLang(infoString);\n        const classValue = lang ? options.langPrefix + escape(lang) : options.emptyLangClass;\n        const classAttr = classValue\n          ? ` class=\"${classValue}\"`\n          : '';\n        code = code.replace(/\\n$/, '');\n        return `<pre><code${classAttr}>${escaped ? code : escape(code, true)}\\n</code></pre>`;\n      },\n    },\n  };\n}\n\nfunction getLang(lang) {\n  return (lang || '').match(/\\S*/)[0];\n}\n\nfunction updateToken(token) {\n  return (code) => {\n    if (typeof code === 'string' && code !== token.text) {\n      token.escaped = true;\n      token.text = code;\n    }\n  };\n}\n\n// copied from marked helpers\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n","const d = [\n  {\n    type: \"note\",\n    icon: '<svg class=\"octicon octicon-info mr-2\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg>'\n  },\n  {\n    type: \"tip\",\n    icon: '<svg class=\"octicon octicon-light-bulb mr-2\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z\"></path></svg>'\n  },\n  {\n    type: \"important\",\n    icon: '<svg class=\"octicon octicon-report mr-2\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v9.5A1.75 1.75 0 0 1 14.25 13H8.06l-2.573 2.573A1.458 1.458 0 0 1 3 14.543V13H1.75A1.75 1.75 0 0 1 0 11.25Zm1.75-.25a.25.25 0 0 0-.25.25v9.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-9.5a.25.25 0 0 0-.25-.25Zm7 2.25v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 9a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>'\n  },\n  {\n    type: \"warning\",\n    icon: '<svg class=\"octicon octicon-alert mr-2\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>'\n  },\n  {\n    type: \"caution\",\n    icon: '<svg class=\"octicon octicon-stop mr-2\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M4.47.22A.749.749 0 0 1 5 0h6c.199 0 .389.079.53.22l4.25 4.25c.141.14.22.331.22.53v6a.749.749 0 0 1-.22.53l-4.25 4.25A.749.749 0 0 1 11 16H5a.749.749 0 0 1-.53-.22L.22 11.53A.749.749 0 0 1 0 11V5c0-.199.079-.389.22-.53Zm.84 1.28L1.5 5.31v5.38l3.81 3.81h5.38l3.81-3.81V5.31L10.69 1.5ZM8 4a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0v-3.5A.75.75 0 0 1 8 4Zm0 8a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg>'\n  }\n];\nfunction m(a) {\n  return a.length ? Object.values(\n    [...d, ...a].reduce(\n      (i, s) => (i[s.type] = s, i),\n      {}\n    )\n  ) : d;\n}\nfunction u(a) {\n  return `^(?:\\\\[!${a.toUpperCase()}])\\\\s*?\n*`;\n}\nfunction x(a) {\n  return a.slice(0, 1).toUpperCase() + a.slice(1).toLowerCase();\n}\nfunction A(a = {}) {\n  const { className: i = \"markdown-alert\", variants: s = [] } = a, g = m(s);\n  return {\n    walkTokens(t) {\n      var e, h, p, v;\n      if (t.type !== \"blockquote\") return;\n      const c = g.find(\n        ({ type: n }) => new RegExp(u(n)).test(t.text)\n      );\n      if (c) {\n        const {\n          type: n,\n          icon: w,\n          title: Z = x(n),\n          titleClassName: f = `${i}-title`\n        } = c, o = new RegExp(u(n));\n        Object.assign(t, {\n          type: \"alert\",\n          meta: {\n            className: i,\n            variant: n,\n            icon: w,\n            title: Z,\n            titleClassName: f\n          }\n        });\n        const r = (e = t.tokens) == null ? void 0 : e[0];\n        if ((h = r.raw) == null ? void 0 : h.replace(o, \"\").trim()) {\n          const l = r.tokens[0];\n          Object.assign(l, {\n            raw: l.raw.replace(o, \"\"),\n            text: l.text.replace(o, \"\")\n          }), ((p = r.tokens[1]) == null ? void 0 : p.type) === \"br\" && r.tokens.splice(1, 1);\n        } else\n          (v = t.tokens) == null || v.shift();\n      }\n    },\n    extensions: [\n      {\n        name: \"alert\",\n        level: \"block\",\n        renderer({ meta: t, tokens: c = [] }) {\n          let e = `<div class=\"${t.className} ${t.className}-${t.variant}\">\n`;\n          return e += `<p class=\"${t.titleClassName}\">`, e += t.icon, e += t.title, e += `</p>\n`, e += this.parser.parse(c), e += `</div>\n`, e;\n        }\n      }\n    ]\n  };\n}\nexport {\n  A as default\n};\n","// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n    // DecimalFloatingPointLiteral\n    // including ExponentPart\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n    // excluding ExponentPart\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n    { begin: `(${frac})[fFdD]?\\\\b` },\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n\n    // HexadecimalFloatingPointLiteral\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n\n    // DecimalIntegerLiteral\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\n\n    // HexIntegerLiteral\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n\n    // OctalIntegerLiteral\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\n\n    // BinaryIntegerLiteral\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\n  ],\n  relevance: 0\n};\n\n/*\nLanguage: Java\nAuthor: Vsevolod Solovyov <vsevolod.solovyov@gmail.com>\nCategory: common, enterprise\nWebsite: https://www.java.com/\n*/\n\n\n/**\n * Allows recursive regex expressions to a given depth\n *\n * ie: recurRegex(\"(abc~~~)\", /~~~/g, 2) becomes:\n * (abc(abc(abc)))\n *\n * @param {string} re\n * @param {RegExp} substitution (should be a g mode regex)\n * @param {number} depth\n * @returns {string}``\n */\nfunction recurRegex(re, substitution, depth) {\n  if (depth === -1) return \"\";\n\n  return re.replace(substitution, _ => {\n    return recurRegex(re, substitution, depth - 1);\n  });\n}\n\n/** @type LanguageFn */\nfunction java(hljs) {\n  const regex = hljs.regex;\n  const JAVA_IDENT_RE = '[\\u00C0-\\u02B8a-zA-Z_$][\\u00C0-\\u02B8a-zA-Z_$0-9]*';\n  const GENERIC_IDENT_RE = JAVA_IDENT_RE\n    + recurRegex('(?:<' + JAVA_IDENT_RE + '~~~(?:\\\\s*,\\\\s*' + JAVA_IDENT_RE + '~~~)*>)?', /~~~/g, 2);\n  const MAIN_KEYWORDS = [\n    'synchronized',\n    'abstract',\n    'private',\n    'var',\n    'static',\n    'if',\n    'const ',\n    'for',\n    'while',\n    'strictfp',\n    'finally',\n    'protected',\n    'import',\n    'native',\n    'final',\n    'void',\n    'enum',\n    'else',\n    'break',\n    'transient',\n    'catch',\n    'instanceof',\n    'volatile',\n    'case',\n    'assert',\n    'package',\n    'default',\n    'public',\n    'try',\n    'switch',\n    'continue',\n    'throws',\n    'protected',\n    'public',\n    'private',\n    'module',\n    'requires',\n    'exports',\n    'do',\n    'sealed',\n    'yield',\n    'permits',\n    'goto',\n    'when'\n  ];\n\n  const BUILT_INS = [\n    'super',\n    'this'\n  ];\n\n  const LITERALS = [\n    'false',\n    'true',\n    'null'\n  ];\n\n  const TYPES = [\n    'char',\n    'boolean',\n    'long',\n    'float',\n    'int',\n    'byte',\n    'short',\n    'double'\n  ];\n\n  const KEYWORDS = {\n    keyword: MAIN_KEYWORDS,\n    literal: LITERALS,\n    type: TYPES,\n    built_in: BUILT_INS\n  };\n\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + JAVA_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [ \"self\" ] // allow nested () inside our annotation\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    relevance: 0,\n    contains: [ hljs.C_BLOCK_COMMENT_MODE ],\n    endsParent: true\n  };\n\n  return {\n    name: 'Java',\n    aliases: [ 'jsp' ],\n    keywords: KEYWORDS,\n    illegal: /<\\/|#/,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance: 0,\n          contains: [\n            {\n              // eat up @'s in emails to prevent them to be recognized as doctags\n              begin: /\\w+@/,\n              relevance: 0\n            },\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      // relevance boost\n      {\n        begin: /import java\\.[a-z]+\\./,\n        keywords: \"import\",\n        relevance: 2\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        begin: /\"\"\"/,\n        end: /\"\"\"/,\n        className: \"string\",\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        match: [\n          /\\b(?:class|interface|enum|extends|implements|new)/,\n          /\\s+/,\n          JAVA_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        // Exceptions for hyphenated keywords\n        match: /non-sealed/,\n        scope: \"keyword\"\n      },\n      {\n        begin: [\n          regex.concat(/(?!else)/, JAVA_IDENT_RE),\n          /\\s+/,\n          JAVA_IDENT_RE,\n          /\\s+/,\n          /=(?!=)/\n        ],\n        className: {\n          1: \"type\",\n          3: \"variable\",\n          5: \"operator\"\n        }\n      },\n      {\n        begin: [\n          /record/,\n          /\\s+/,\n          JAVA_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        },\n        contains: [\n          PARAMS,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new throw return else',\n        relevance: 0\n      },\n      {\n        begin: [\n          '(?:' + GENERIC_IDENT_RE + '\\\\s+)',\n          hljs.UNDERSCORE_IDENT_RE,\n          /\\s*(?=\\()/\n        ],\n        className: { 2: \"title.function\" },\n        keywords: KEYWORDS,\n        contains: [\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              ANNOTATION,\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              NUMERIC,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      NUMERIC,\n      ANNOTATION\n    ]\n  };\n}\n\nexport { java as default };\n","const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\",\n  // It's reached stage 3, which is \"recommended for implementation\":\n  \"using\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\nconst TYPES = [\n  // Fundamental objects\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Symbol\",\n  // numbers and dates\n  \"Math\",\n  \"Date\",\n  \"Number\",\n  \"BigInt\",\n  // text\n  \"String\",\n  \"RegExp\",\n  // Indexed collections\n  \"Array\",\n  \"Float32Array\",\n  \"Float64Array\",\n  \"Int8Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"BigInt64Array\",\n  \"BigUint64Array\",\n  // Keyed collections\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  // Structured data\n  \"ArrayBuffer\",\n  \"SharedArrayBuffer\",\n  \"Atomics\",\n  \"DataView\",\n  \"JSON\",\n  // Control abstraction objects\n  \"Promise\",\n  \"Generator\",\n  \"GeneratorFunction\",\n  \"AsyncFunction\",\n  // Reflection\n  \"Reflect\",\n  \"Proxy\",\n  // Internationalization\n  \"Intl\",\n  // WebAssembly\n  \"WebAssembly\"\n];\n\nconst ERROR_TYPES = [\n  \"Error\",\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"sessionStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  TYPES,\n  ERROR_TYPES\n);\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\n\n/** @type LanguageFn */\nfunction javascript(hljs) {\n  const regex = hljs.regex;\n  /**\n   * Takes a string like \"<Booger\" and checks to see\n   * if we can find a matching \"</Booger\" later in the\n   * content.\n   * @param {RegExpMatchArray} match\n   * @param {{after:number}} param1\n   */\n  const hasClosingTag = (match, { after }) => {\n    const tag = \"</\" + match[0].slice(1);\n    const pos = match.input.indexOf(tag, after);\n    return pos !== -1;\n  };\n\n  const IDENT_RE$1 = IDENT_RE;\n  const FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  // to avoid some special cases inside isTrulyOpeningTag\n  const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/;\n  const XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n    /**\n     * @param {RegExpMatchArray} match\n     * @param {CallbackResponse} response\n     */\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index;\n      const nextChar = match.input[afterMatchIndex];\n      if (\n        // HTML should not include another raw `<` inside a tag\n        // nested type?\n        // `<Array<Array<number>>`, etc.\n        nextChar === \"<\" ||\n        // the , gives away that this is not HTML\n        // `<T, A extends keyof T, V>`\n        nextChar === \",\"\n        ) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<something>`\n      // Quite possibly a tag, lets look for a matching closing tag...\n      if (nextChar === \">\") {\n        // if we cannot find a matching closing tag, then we\n        // will ignore it\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch();\n        }\n      }\n\n      // `<blah />` (self-closing)\n      // handled by simpleSelfClosing rule\n\n      let m;\n      const afterMatch = match.input.substring(afterMatchIndex);\n\n      // some more template typing stuff\n      //  <T = any>(key?: string) => Modify<\n      if ((m = afterMatch.match(/^\\s*=/))) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<From extends string>`\n      // technically this could be HTML, but it smells like a type\n      // NOTE: This is ugh, but added specifically for https://github.com/highlightjs/highlight.js/issues/3276\n      if ((m = afterMatch.match(/^\\s+extends\\s+/))) {\n        if (m.index === 0) {\n          response.ignoreMatch();\n          // eslint-disable-next-line no-useless-return\n          return;\n        }\n      }\n    }\n  };\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\n  const decimalDigits = '[0-9](_?[0-9])*';\n  const frac = `\\\\.(${decimalDigits})`;\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      // DecimalLiteral\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\n        `[eE][+-]?(${decimalDigits})\\\\b` },\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\n\n      // DecimalBigIntegerLiteral\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n\n      // NonDecimalIntegerLiteral\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\n\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\n    ],\n    relevance: 0\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: [] // defined later\n  };\n  const HTML_TEMPLATE = {\n    begin: '\\.?html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml'\n    }\n  };\n  const CSS_TEMPLATE = {\n    begin: '\\.?css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css'\n    }\n  };\n  const GRAPHQL_TEMPLATE = {\n    begin: '\\.?gql`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'graphql'\n    }\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  const JSDOC_COMMENT = hljs.COMMENT(\n    /\\/\\*\\*(?!\\/)/,\n    '\\\\*/',\n    {\n      relevance: 0,\n      contains: [\n        {\n          begin: '(?=@[A-Za-z]+)',\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            },\n            {\n              className: 'type',\n              begin: '\\\\{',\n              end: '\\\\}',\n              excludeEnd: true,\n              excludeBegin: true,\n              relevance: 0\n            },\n            {\n              className: 'variable',\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n              endsParent: true,\n              relevance: 0\n            },\n            // eat spaces (not newlines) so we can find\n            // types or variables\n            {\n              begin: /(?=[^\\n])\\s/,\n              relevance: 0\n            }\n          ]\n        }\n      ]\n    }\n  );\n  const COMMENT = {\n    className: \"comment\",\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  };\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    GRAPHQL_TEMPLATE,\n    TEMPLATE_STRING,\n    // Skip numbers when they are part of a variable name\n    { match: /\\$\\d+/ },\n    NUMBER,\n    // This is intentional:\n    // See https://github.com/highlightjs/highlight.js/issues/3288\n    // hljs.REGEXP_MODE\n  ];\n  SUBST.contains = SUBST_INTERNALS\n    .concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    // eat recursive parens in sub expressions\n    {\n      begin: /(\\s*)\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n    }\n  ]);\n  const PARAMS = {\n    className: 'params',\n    // convert this to negative lookbehind in v12\n    begin: /(\\s*)\\(/, // to match the parms with\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  };\n\n  // ES6 classes\n  const CLASS_OR_EXTENDS = {\n    variants: [\n      // class Car extends vehicle\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1,\n          /\\s+/,\n          /extends/,\n          /\\s+/,\n          regex.concat(IDENT_RE$1, \"(\", regex.concat(/\\./, IDENT_RE$1), \")*\")\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          5: \"keyword\",\n          7: \"title.class.inherited\"\n        }\n      },\n      // class Car\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n\n    ]\n  };\n\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match:\n    regex.either(\n      // Hard coded exceptions\n      /\\bJSON/,\n      // Float32Array, OutT\n      /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\n      // CSSFactory, CSSFactoryT\n      /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\n      // FPs, FPsT\n      /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/,\n      // P\n      // single letters are not highlighted\n      // BLAH\n      // this will be flagged as a UPPER_CASE_CONSTANT instead\n    ),\n    className: \"title.class\",\n    keywords: {\n      _: [\n        // se we still get relevance credit for JS library classes\n        ...TYPES,\n        ...ERROR_TYPES\n      ]\n    }\n  };\n\n  const USE_STRICT = {\n    label: \"use_strict\",\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\n  };\n\n  const FUNCTION_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /function/,\n          /\\s+/,\n          IDENT_RE$1,\n          /(?=\\s*\\()/\n        ]\n      },\n      // anonymous function\n      {\n        match: [\n          /function/,\n          /\\s*(?=\\()/\n        ]\n      }\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    label: \"func.def\",\n    contains: [ PARAMS ],\n    illegal: /%/\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  function noneOf(list) {\n    return regex.concat(\"(?!\", list.join(\"|\"), \")\");\n  }\n\n  const FUNCTION_CALL = {\n    match: regex.concat(\n      /\\b/,\n      noneOf([\n        ...BUILT_IN_GLOBALS,\n        \"super\",\n        \"import\"\n      ].map(x => `${x}\\\\s*\\\\(`)),\n      IDENT_RE$1, regex.lookahead(/\\s*\\(/)),\n    className: \"title.function\",\n    relevance: 0\n  };\n\n  const PROPERTY_ACCESS = {\n    begin: regex.concat(/\\./, regex.lookahead(\n      regex.concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\n    )),\n    end: IDENT_RE$1,\n    excludeBegin: true,\n    keywords: \"prototype\",\n    className: \"property\",\n    relevance: 0\n  };\n\n  const GETTER_OR_SETTER = {\n    match: [\n      /get|set/,\n      /\\s+/,\n      IDENT_RE$1,\n      /(?=\\()/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      { // eat to avoid empty params\n        begin: /\\(\\)/\n      },\n      PARAMS\n    ]\n  };\n\n  const FUNC_LEAD_IN_RE = '(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\n\n  const FUNCTION_VARIABLE = {\n    match: [\n      /const|var|let/, /\\s+/,\n      IDENT_RE$1, /\\s*/,\n      /=\\s*/,\n      /(async\\s*)?/, // async is optional\n      regex.lookahead(FUNC_LEAD_IN_RE)\n    ],\n    keywords: \"async\",\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  return {\n    name: 'JavaScript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    // this will be extended by TypeScript\n    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\n    illegal: /#(?![$_A-z])/,\n    contains: [\n      hljs.SHEBANG({\n        label: \"shebang\",\n        binary: \"node\",\n        relevance: 5\n      }),\n      USE_STRICT,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      GRAPHQL_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      // Skip numbers when they are part of a variable name\n      { match: /\\$\\d+/ },\n      NUMBER,\n      CLASS_REFERENCE,\n      {\n        scope: 'attr',\n        match: IDENT_RE$1 + regex.lookahead(':'),\n        relevance: 0\n      },\n      FUNCTION_VARIABLE,\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        relevance: 0,\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: FUNC_LEAD_IN_RE,\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE,\n                    relevance: 0\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /(\\s*)\\(/,\n                    end: /\\)/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/,\n            relevance: 0\n          },\n          {\n            match: /\\s+/,\n            relevance: 0\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              { match: XML_SELF_CLOSING },\n              {\n                begin: XML_TAG.begin,\n                // we carefully check the opening tag to see if it truly\n                // is a tag and not a false positive\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ],\n      },\n      FUNCTION_DEFINITION,\n      {\n        // prevent this from getting swallowed up by function\n        // since they appear \"function like\"\n        beginKeywords: \"while if switch catch for\"\n      },\n      {\n        // we have to count the parens to make sure we actually have the correct\n        // bounding ( ).  There could be any number of sub-expressions inside\n        // also surrounded by parens.\n        begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' + // first parens\n          '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n              '[^()]*' +\n            '\\\\)[^()]*)*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)\\\\s*\\\\{', // end parens\n        returnBegin:true,\n        label: \"func.def\",\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\n        ]\n      },\n      // catch ... so it won't trigger the property rule below\n      {\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      PROPERTY_ACCESS,\n      // hack: prevents detection of keywords in some circumstances\n      // .keyword()\n      // $keyword = x\n      {\n        match: '\\\\$' + IDENT_RE$1,\n        relevance: 0\n      },\n      {\n        match: [ /\\bconstructor(?=\\s*\\()/ ],\n        className: { 1: \"title.function\" },\n        contains: [ PARAMS ]\n      },\n      FUNCTION_CALL,\n      UPPER_CASE_CONSTANT,\n      CLASS_OR_EXTENDS,\n      GETTER_OR_SETTER,\n      {\n        match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      }\n    ]\n  };\n}\n\nexport { javascript as default };\n","const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\",\n  // It's reached stage 3, which is \"recommended for implementation\":\n  \"using\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\nconst TYPES = [\n  // Fundamental objects\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Symbol\",\n  // numbers and dates\n  \"Math\",\n  \"Date\",\n  \"Number\",\n  \"BigInt\",\n  // text\n  \"String\",\n  \"RegExp\",\n  // Indexed collections\n  \"Array\",\n  \"Float32Array\",\n  \"Float64Array\",\n  \"Int8Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"BigInt64Array\",\n  \"BigUint64Array\",\n  // Keyed collections\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  // Structured data\n  \"ArrayBuffer\",\n  \"SharedArrayBuffer\",\n  \"Atomics\",\n  \"DataView\",\n  \"JSON\",\n  // Control abstraction objects\n  \"Promise\",\n  \"Generator\",\n  \"GeneratorFunction\",\n  \"AsyncFunction\",\n  // Reflection\n  \"Reflect\",\n  \"Proxy\",\n  // Internationalization\n  \"Intl\",\n  // WebAssembly\n  \"WebAssembly\"\n];\n\nconst ERROR_TYPES = [\n  \"Error\",\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"sessionStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  TYPES,\n  ERROR_TYPES\n);\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\n\n/** @type LanguageFn */\nfunction javascript(hljs) {\n  const regex = hljs.regex;\n  /**\n   * Takes a string like \"<Booger\" and checks to see\n   * if we can find a matching \"</Booger\" later in the\n   * content.\n   * @param {RegExpMatchArray} match\n   * @param {{after:number}} param1\n   */\n  const hasClosingTag = (match, { after }) => {\n    const tag = \"</\" + match[0].slice(1);\n    const pos = match.input.indexOf(tag, after);\n    return pos !== -1;\n  };\n\n  const IDENT_RE$1 = IDENT_RE;\n  const FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  // to avoid some special cases inside isTrulyOpeningTag\n  const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/;\n  const XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n    /**\n     * @param {RegExpMatchArray} match\n     * @param {CallbackResponse} response\n     */\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index;\n      const nextChar = match.input[afterMatchIndex];\n      if (\n        // HTML should not include another raw `<` inside a tag\n        // nested type?\n        // `<Array<Array<number>>`, etc.\n        nextChar === \"<\" ||\n        // the , gives away that this is not HTML\n        // `<T, A extends keyof T, V>`\n        nextChar === \",\"\n        ) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<something>`\n      // Quite possibly a tag, lets look for a matching closing tag...\n      if (nextChar === \">\") {\n        // if we cannot find a matching closing tag, then we\n        // will ignore it\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch();\n        }\n      }\n\n      // `<blah />` (self-closing)\n      // handled by simpleSelfClosing rule\n\n      let m;\n      const afterMatch = match.input.substring(afterMatchIndex);\n\n      // some more template typing stuff\n      //  <T = any>(key?: string) => Modify<\n      if ((m = afterMatch.match(/^\\s*=/))) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<From extends string>`\n      // technically this could be HTML, but it smells like a type\n      // NOTE: This is ugh, but added specifically for https://github.com/highlightjs/highlight.js/issues/3276\n      if ((m = afterMatch.match(/^\\s+extends\\s+/))) {\n        if (m.index === 0) {\n          response.ignoreMatch();\n          // eslint-disable-next-line no-useless-return\n          return;\n        }\n      }\n    }\n  };\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\n  const decimalDigits = '[0-9](_?[0-9])*';\n  const frac = `\\\\.(${decimalDigits})`;\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      // DecimalLiteral\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\n        `[eE][+-]?(${decimalDigits})\\\\b` },\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\n\n      // DecimalBigIntegerLiteral\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n\n      // NonDecimalIntegerLiteral\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\n\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\n    ],\n    relevance: 0\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: [] // defined later\n  };\n  const HTML_TEMPLATE = {\n    begin: '\\.?html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml'\n    }\n  };\n  const CSS_TEMPLATE = {\n    begin: '\\.?css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css'\n    }\n  };\n  const GRAPHQL_TEMPLATE = {\n    begin: '\\.?gql`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'graphql'\n    }\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  const JSDOC_COMMENT = hljs.COMMENT(\n    /\\/\\*\\*(?!\\/)/,\n    '\\\\*/',\n    {\n      relevance: 0,\n      contains: [\n        {\n          begin: '(?=@[A-Za-z]+)',\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            },\n            {\n              className: 'type',\n              begin: '\\\\{',\n              end: '\\\\}',\n              excludeEnd: true,\n              excludeBegin: true,\n              relevance: 0\n            },\n            {\n              className: 'variable',\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n              endsParent: true,\n              relevance: 0\n            },\n            // eat spaces (not newlines) so we can find\n            // types or variables\n            {\n              begin: /(?=[^\\n])\\s/,\n              relevance: 0\n            }\n          ]\n        }\n      ]\n    }\n  );\n  const COMMENT = {\n    className: \"comment\",\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  };\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    GRAPHQL_TEMPLATE,\n    TEMPLATE_STRING,\n    // Skip numbers when they are part of a variable name\n    { match: /\\$\\d+/ },\n    NUMBER,\n    // This is intentional:\n    // See https://github.com/highlightjs/highlight.js/issues/3288\n    // hljs.REGEXP_MODE\n  ];\n  SUBST.contains = SUBST_INTERNALS\n    .concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    // eat recursive parens in sub expressions\n    {\n      begin: /(\\s*)\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n    }\n  ]);\n  const PARAMS = {\n    className: 'params',\n    // convert this to negative lookbehind in v12\n    begin: /(\\s*)\\(/, // to match the parms with\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  };\n\n  // ES6 classes\n  const CLASS_OR_EXTENDS = {\n    variants: [\n      // class Car extends vehicle\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1,\n          /\\s+/,\n          /extends/,\n          /\\s+/,\n          regex.concat(IDENT_RE$1, \"(\", regex.concat(/\\./, IDENT_RE$1), \")*\")\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          5: \"keyword\",\n          7: \"title.class.inherited\"\n        }\n      },\n      // class Car\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n\n    ]\n  };\n\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match:\n    regex.either(\n      // Hard coded exceptions\n      /\\bJSON/,\n      // Float32Array, OutT\n      /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\n      // CSSFactory, CSSFactoryT\n      /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\n      // FPs, FPsT\n      /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/,\n      // P\n      // single letters are not highlighted\n      // BLAH\n      // this will be flagged as a UPPER_CASE_CONSTANT instead\n    ),\n    className: \"title.class\",\n    keywords: {\n      _: [\n        // se we still get relevance credit for JS library classes\n        ...TYPES,\n        ...ERROR_TYPES\n      ]\n    }\n  };\n\n  const USE_STRICT = {\n    label: \"use_strict\",\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\n  };\n\n  const FUNCTION_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /function/,\n          /\\s+/,\n          IDENT_RE$1,\n          /(?=\\s*\\()/\n        ]\n      },\n      // anonymous function\n      {\n        match: [\n          /function/,\n          /\\s*(?=\\()/\n        ]\n      }\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    label: \"func.def\",\n    contains: [ PARAMS ],\n    illegal: /%/\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  function noneOf(list) {\n    return regex.concat(\"(?!\", list.join(\"|\"), \")\");\n  }\n\n  const FUNCTION_CALL = {\n    match: regex.concat(\n      /\\b/,\n      noneOf([\n        ...BUILT_IN_GLOBALS,\n        \"super\",\n        \"import\"\n      ].map(x => `${x}\\\\s*\\\\(`)),\n      IDENT_RE$1, regex.lookahead(/\\s*\\(/)),\n    className: \"title.function\",\n    relevance: 0\n  };\n\n  const PROPERTY_ACCESS = {\n    begin: regex.concat(/\\./, regex.lookahead(\n      regex.concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\n    )),\n    end: IDENT_RE$1,\n    excludeBegin: true,\n    keywords: \"prototype\",\n    className: \"property\",\n    relevance: 0\n  };\n\n  const GETTER_OR_SETTER = {\n    match: [\n      /get|set/,\n      /\\s+/,\n      IDENT_RE$1,\n      /(?=\\()/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      { // eat to avoid empty params\n        begin: /\\(\\)/\n      },\n      PARAMS\n    ]\n  };\n\n  const FUNC_LEAD_IN_RE = '(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\n\n  const FUNCTION_VARIABLE = {\n    match: [\n      /const|var|let/, /\\s+/,\n      IDENT_RE$1, /\\s*/,\n      /=\\s*/,\n      /(async\\s*)?/, // async is optional\n      regex.lookahead(FUNC_LEAD_IN_RE)\n    ],\n    keywords: \"async\",\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  return {\n    name: 'JavaScript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    // this will be extended by TypeScript\n    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\n    illegal: /#(?![$_A-z])/,\n    contains: [\n      hljs.SHEBANG({\n        label: \"shebang\",\n        binary: \"node\",\n        relevance: 5\n      }),\n      USE_STRICT,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      GRAPHQL_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      // Skip numbers when they are part of a variable name\n      { match: /\\$\\d+/ },\n      NUMBER,\n      CLASS_REFERENCE,\n      {\n        scope: 'attr',\n        match: IDENT_RE$1 + regex.lookahead(':'),\n        relevance: 0\n      },\n      FUNCTION_VARIABLE,\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        relevance: 0,\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: FUNC_LEAD_IN_RE,\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE,\n                    relevance: 0\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /(\\s*)\\(/,\n                    end: /\\)/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/,\n            relevance: 0\n          },\n          {\n            match: /\\s+/,\n            relevance: 0\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              { match: XML_SELF_CLOSING },\n              {\n                begin: XML_TAG.begin,\n                // we carefully check the opening tag to see if it truly\n                // is a tag and not a false positive\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ],\n      },\n      FUNCTION_DEFINITION,\n      {\n        // prevent this from getting swallowed up by function\n        // since they appear \"function like\"\n        beginKeywords: \"while if switch catch for\"\n      },\n      {\n        // we have to count the parens to make sure we actually have the correct\n        // bounding ( ).  There could be any number of sub-expressions inside\n        // also surrounded by parens.\n        begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' + // first parens\n          '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n              '[^()]*' +\n            '\\\\)[^()]*)*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)\\\\s*\\\\{', // end parens\n        returnBegin:true,\n        label: \"func.def\",\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\n        ]\n      },\n      // catch ... so it won't trigger the property rule below\n      {\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      PROPERTY_ACCESS,\n      // hack: prevents detection of keywords in some circumstances\n      // .keyword()\n      // $keyword = x\n      {\n        match: '\\\\$' + IDENT_RE$1,\n        relevance: 0\n      },\n      {\n        match: [ /\\bconstructor(?=\\s*\\()/ ],\n        className: { 1: \"title.function\" },\n        contains: [ PARAMS ]\n      },\n      FUNCTION_CALL,\n      UPPER_CASE_CONSTANT,\n      CLASS_OR_EXTENDS,\n      GETTER_OR_SETTER,\n      {\n        match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      }\n    ]\n  };\n}\n\n/*\nLanguage: TypeScript\nAuthor: Panu Horsmalahti <panu.horsmalahti@iki.fi>\nContributors: Ike Ku <dempfi@yahoo.com>\nDescription: TypeScript is a strict superset of JavaScript\nWebsite: https://www.typescriptlang.org\nCategory: common, scripting\n*/\n\n\n/** @type LanguageFn */\nfunction typescript(hljs) {\n  const regex = hljs.regex;\n  const tsLanguage = javascript(hljs);\n\n  const IDENT_RE$1 = IDENT_RE;\n  const TYPES = [\n    \"any\",\n    \"void\",\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"object\",\n    \"never\",\n    \"symbol\",\n    \"bigint\",\n    \"unknown\"\n  ];\n  const NAMESPACE = {\n    begin: [\n      /namespace/,\n      /\\s+/,\n      hljs.IDENT_RE\n    ],\n    beginScope: {\n      1: \"keyword\",\n      3: \"title.class\"\n    }\n  };\n  const INTERFACE = {\n    beginKeywords: 'interface',\n    end: /\\{/,\n    excludeEnd: true,\n    keywords: {\n      keyword: 'interface extends',\n      built_in: TYPES\n    },\n    contains: [ tsLanguage.exports.CLASS_REFERENCE ]\n  };\n  const USE_STRICT = {\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use strict['\"]/\n  };\n  const TS_SPECIFIC_KEYWORDS = [\n    \"type\",\n    // \"namespace\",\n    \"interface\",\n    \"public\",\n    \"private\",\n    \"protected\",\n    \"implements\",\n    \"declare\",\n    \"abstract\",\n    \"readonly\",\n    \"enum\",\n    \"override\",\n    \"satisfies\"\n  ];\n  /*\n    namespace is a TS keyword but it's fine to use it as a variable name too.\n    const message = 'foo';\n    const namespace = 'bar';\n  */\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS.concat(TS_SPECIFIC_KEYWORDS),\n    literal: LITERALS,\n    built_in: BUILT_INS.concat(TYPES),\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n\n  const DECORATOR = {\n    className: 'meta',\n    begin: '@' + IDENT_RE$1,\n  };\n\n  const swapMode = (mode, label, replacement) => {\n    const indx = mode.contains.findIndex(m => m.label === label);\n    if (indx === -1) { throw new Error(\"can not find mode to replace\"); }\n\n    mode.contains.splice(indx, 1, replacement);\n  };\n\n\n  // this should update anywhere keywords is used since\n  // it will be the same actual JS object\n  Object.assign(tsLanguage.keywords, KEYWORDS$1);\n\n  tsLanguage.exports.PARAMS_CONTAINS.push(DECORATOR);\n\n  // highlight the function params\n  const ATTRIBUTE_HIGHLIGHT = tsLanguage.contains.find(c => c.scope === \"attr\");\n\n  // take default attr rule and extend it to support optionals\n  const OPTIONAL_KEY_OR_ARGUMENT = Object.assign({},\n    ATTRIBUTE_HIGHLIGHT,\n    { match: regex.concat(IDENT_RE$1, regex.lookahead(/\\s*\\?:/)) }\n  );\n  tsLanguage.exports.PARAMS_CONTAINS.push([\n    tsLanguage.exports.CLASS_REFERENCE, // class reference for highlighting the params types\n    ATTRIBUTE_HIGHLIGHT, // highlight the params key\n    OPTIONAL_KEY_OR_ARGUMENT, // Added for optional property assignment highlighting\n  ]);\n\n  // Add the optional property assignment highlighting for objects or classes\n  tsLanguage.contains = tsLanguage.contains.concat([\n    DECORATOR,\n    NAMESPACE,\n    INTERFACE,\n    OPTIONAL_KEY_OR_ARGUMENT, // Added for optional property assignment highlighting\n  ]);\n\n  // TS gets a simpler shebang rule than JS\n  swapMode(tsLanguage, \"shebang\", hljs.SHEBANG());\n  // JS use strict rule purposely excludes `asm` which makes no sense\n  swapMode(tsLanguage, \"use_strict\", USE_STRICT);\n\n  const functionDeclaration = tsLanguage.contains.find(m => m.label === \"func.def\");\n  functionDeclaration.relevance = 0; // () => {} is more typical in TypeScript\n\n  Object.assign(tsLanguage, {\n    name: 'TypeScript',\n    aliases: [\n      'ts',\n      'tsx',\n      'mts',\n      'cts'\n    ]\n  });\n\n  return tsLanguage;\n}\n\nexport { typescript as default };\n","import { Marked } from \"marked\";\r\nimport DOMPurify from \"dompurify\";\r\nimport { markedHighlight } from \"marked-highlight\";\r\nimport markedFootnote from \"marked-footnote\";\r\nimport markedAlert from \"marked-alert\";\r\nimport hljs from \"highlight.js/lib/core\";\r\n\r\nimport { UserNote, NoteStore } from \"./definitions\";\r\n\r\n// Import supported code languages (for size purposes)\r\nimport c from \"highlight.js/lib/languages/c\";\r\nimport cpp from \"highlight.js/lib/languages/cpp\";\r\nimport java from \"highlight.js/lib/languages/java\";\r\nimport javascript from \"highlight.js/lib/languages/javascript\";\r\nimport plaintext from \"highlight.js/lib/languages/plaintext\";\r\nimport python from \"highlight.js/lib/languages/python\";\r\nimport rust from \"highlight.js/lib/languages/rust\";\r\nimport typescript from \"highlight.js/lib/languages/typescript\";\r\n\r\n// Register languages to highlight.js\r\nhljs.registerLanguage(\"c\", c);\r\nhljs.registerLanguage(\"cpp\", cpp);\r\nhljs.registerLanguage(\"java\", java);\r\nhljs.registerLanguage(\"javascript\", javascript);\r\nhljs.registerLanguage(\"python\", python);\r\nhljs.registerLanguage(\"plaintext\", plaintext);\r\nhljs.registerLanguage(\"rust\", rust);\r\nhljs.registerLanguage(\"typescript\", typescript);\r\n\r\n// Marked object\r\nconst marked = new Marked(\r\n  {\r\n    gfm: true,\r\n  },\r\n  markedHighlight({\r\n    langPrefix: \"hljs language-\",\r\n    highlight(code, lang, info) {\r\n      const language = hljs.getLanguage(lang) ? lang : \"plaintext\";\r\n      return hljs.highlight(code, { language }).value;\r\n    },\r\n  }),\r\n  markedFootnote(),\r\n  markedAlert()\r\n);\r\n\r\nconst timeout = 0;\r\n\r\n// Global states for docket\r\nlet docketProps = {\r\n  settings: {\r\n    uiTheme: \"light\",\r\n    codeStyle: \"github\",\r\n  },\r\n  tempProps: {\r\n    draggedNote: null as HTMLLIElement | null,\r\n  },\r\n  activeNoteUUID: \"\",\r\n  noteStore: {\r\n    noteMap: new Map<string, UserNote>(),\r\n    indexToUUID: new Map<number, string>(),\r\n    UUIDToIndex: new Map<string, number>(),\r\n    deletedNotes: new Set<string>(), // Store deleted notes for syncing later\r\n  } as NoteStore,\r\n  dbConnection: undefined as IDBDatabase | undefined,\r\n};\r\n\r\n/**\r\n * Decode HTML entities in a string back to their original characters.\r\n * This is useful for displaying HTML encoded strings in input boxes such as the title.\r\n * @param input HTML encoded string to decode\r\n * @returns Decoded string\r\n */\r\nconst htmlDecode = (input: string): string => {\r\n  var doc = new DOMParser().parseFromString(input, \"text/html\");\r\n  return doc.documentElement.textContent || \"\";\r\n};\r\n\r\n/**\r\n * Load active note UUID from local storage and set active note.\r\n * If no active note is set, set the active note to the first note in the note store or create a new one if none exist.\r\n */\r\nconst loadActiveNote = () => {\r\n  chrome.storage.local.get(\"activeNoteUUID\", (result) => {\r\n    if (result.activeNoteUUID) {\r\n      docketProps.activeNoteUUID = result.activeNoteUUID;\r\n      const activeNote = getNoteByUUID(docketProps.activeNoteUUID);\r\n      setActiveNote(activeNote);\r\n    } else {\r\n      // Set active note to the first note or create a new one if none exist\r\n      if (docketProps.noteStore.noteMap.size > 0) {\r\n        setActiveNote(getNoteByIndex(0));\r\n      } else {\r\n        setActiveNote(createNote());\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Load notes from IndexedDB to the active note store.\r\n * @param db IndexedDB database connection\r\n */\r\nconst loadIndexedDbNotes = (db: IDBDatabase) => {\r\n  const transaction = db.transaction(\"notes\", \"readonly\");\r\n  const notesStore = transaction.objectStore(\"notes\");\r\n  const request = notesStore.getAll();\r\n  request.onsuccess = (event) => {\r\n    const notes = (event.target as IDBRequest).result;\r\n    notes.forEach((note: UserNote) => {\r\n      setNoteByUUID(note.uuid, note);\r\n    });\r\n    renderNoteList();\r\n    loadActiveNote();\r\n  };\r\n};\r\n\r\nconst initDbConnection = async () => {\r\n  const request = indexedDB.open(\"docketDB\", 1);\r\n  request.onupgradeneeded = (event) => {\r\n    const db = (event.target as IDBOpenDBRequest).result;\r\n    // Create object store for notes\r\n    if (!db.objectStoreNames.contains(\"notes\")) {\r\n      db.createObjectStore(\"notes\", { keyPath: \"uuid\" });\r\n      db.createObjectStore(\"noteOrder\", { keyPath: \"index\" });\r\n    }\r\n    docketProps.dbConnection = db;\r\n  };\r\n  request.onsuccess = (event) => {\r\n    docketProps.dbConnection = request.result;\r\n    loadIndexedDbNoteOrder(docketProps.dbConnection);\r\n    loadIndexedDbNotes(docketProps.dbConnection);\r\n  };\r\n  request.onerror = (event) => {\r\n    console.error(\r\n      \"Error opening indexedDB:\",\r\n      (event.target as IDBOpenDBRequest).error\r\n    );\r\n  };\r\n};\r\n\r\n/**\r\n * Get editor text from HTML element\r\n **/\r\nconst getHTMLEditorText = () => {\r\n  return (\r\n    (<HTMLInputElement>document.getElementById(\"markdownInput\")).value || \"\"\r\n  );\r\n};\r\n\r\n/**\r\n * Get note title from the HTML element\r\n **/\r\nconst getHTMLNoteTitle = () => {\r\n  return (\r\n    (<HTMLInputElement>document.getElementById(\"noteTitle\")).value || \"unnamed\"\r\n  );\r\n};\r\n\r\n/**\r\n * Return a note object given its UUID. Create a new note if it doesn't exist.\r\n * @param uuid UUID of note to get\r\n **/\r\nconst getNoteByUUID = (uuid: string): UserNote => {\r\n  return docketProps.noteStore.noteMap.get(uuid) || createNote();\r\n};\r\n\r\n/**\r\n * Return a note object given its index in the note list. Create a new note if it doesn't exist.\r\n * @param index Index of note to get\r\n **/\r\nconst getNoteByIndex = (index: number): UserNote => {\r\n  const uuid = docketProps.noteStore.indexToUUID.get(index);\r\n  return docketProps.noteStore.noteMap.get(uuid!) || createNote();\r\n};\r\n\r\n/**\r\n * Set a note in the note store by UUID.\r\n * @param uuid UUID of note to set\r\n * @param note UserNote object to set\r\n */\r\nconst setNoteByUUID = (uuid: string, note: UserNote) => {\r\n  if (!docketProps.noteStore.UUIDToIndex.has(uuid)) {\r\n    // If the note does not exist, add it to the store\r\n    const index = docketProps.noteStore.indexToUUID.size;\r\n    docketProps.noteStore.indexToUUID.set(index, uuid);\r\n    docketProps.noteStore.UUIDToIndex.set(uuid, index);\r\n  }\r\n  docketProps.noteStore.noteMap.set(uuid, note);\r\n};\r\n\r\n/**\r\n * Delete a note from the note store.\r\n * @param uuid UUID of note to delete.\r\n */\r\nconst deleteNoteByUUID = (uuid: string) => {\r\n  // Remove note from noteStore\r\n  docketProps.noteStore.noteMap.delete(uuid);\r\n\r\n  // Delete note from indexedDB\r\n  docketProps.dbConnection\r\n    ?.transaction(\"notes\", \"readwrite\")\r\n    .objectStore(\"notes\")\r\n    .delete(uuid);\r\n\r\n  // Add note to deleted notes set for syncing later\r\n  docketProps.noteStore.deletedNotes.add(uuid);\r\n\r\n  // Remove note from indexToUUID and UUIDToIndex\r\n  const index = docketProps.noteStore.UUIDToIndex.get(uuid);\r\n  if (index !== undefined) {\r\n    // If there are notes after this one, decrement their indices and set the active note\r\n    for (\r\n      let i = index + 1;\r\n      i < docketProps.noteStore.indexToUUID.size;\r\n      i++\r\n    ) {\r\n      let uuidAtIndex = docketProps.noteStore.indexToUUID.get(i);\r\n      if (uuidAtIndex) {\r\n        docketProps.noteStore.UUIDToIndex.set(uuidAtIndex, i - 1);\r\n        docketProps.noteStore.indexToUUID.set(i - 1, uuidAtIndex);\r\n      }\r\n    }\r\n    docketProps.noteStore.UUIDToIndex.delete(uuid);\r\n    docketProps.noteStore.indexToUUID.delete(\r\n      docketProps.noteStore.indexToUUID.size - 1\r\n    );\r\n    if (docketProps.noteStore.noteMap.size > 0) {\r\n      // Go back to home note\r\n      setActiveNote(getNoteByIndex(0));\r\n    } else {\r\n      // If no notes left, create a new note\r\n      setActiveNote(createNote());\r\n    }\r\n  }\r\n  saveNoteOrder();\r\n  renderNoteList();\r\n};\r\n\r\n/**\r\n * Move a note to a new index in the note list. This updates the location of all notes in the list to maintain order.\r\n * @param uuid UUID of the note to move\r\n * @param targetIndex The index to move the note to\r\n */\r\nconst moveNoteToIndex = (uuid: string, targetIndex: number) => {\r\n  // Get the previous index of the note\r\n  const prevIndex = docketProps.noteStore.UUIDToIndex.get(uuid);\r\n  if (prevIndex && prevIndex < targetIndex) {\r\n    // If moving down the list (index increases), decrement all indices between prevIndex and targetIndex\r\n    for (let i = prevIndex + 1; i <= targetIndex; i++) {\r\n      let uuidAtIndex = docketProps.noteStore.indexToUUID.get(i);\r\n      if (uuidAtIndex) {\r\n        docketProps.noteStore.UUIDToIndex.set(uuidAtIndex, i - 1);\r\n        docketProps.noteStore.indexToUUID.set(i - 1, uuidAtIndex);\r\n      }\r\n    }\r\n  } else if (prevIndex && prevIndex > targetIndex) {\r\n    // If moving up the list (index decreases), increment all indices between targetIndex and prevIndex\r\n    for (let i = prevIndex - 1; i >= targetIndex; i--) {\r\n      let uuidAtIndex = docketProps.noteStore.indexToUUID.get(i);\r\n      if (uuidAtIndex) {\r\n        docketProps.noteStore.UUIDToIndex.set(uuidAtIndex, i + 1);\r\n        docketProps.noteStore.indexToUUID.set(i + 1, uuidAtIndex);\r\n      }\r\n    }\r\n  }\r\n  // Update the note's index\r\n  docketProps.noteStore.UUIDToIndex.set(uuid, targetIndex);\r\n  docketProps.noteStore.indexToUUID.set(targetIndex, uuid);\r\n  saveNoteOrder(); // Update indexedDB entry for note order\r\n  // console.log(`Moved note ${uuid} to index ${targetIndex}`);\r\n};\r\n\r\n/**\r\n * Return the active note from the current docket instance. Returns `undefined` if no active note is set.\r\n * @returns `UserNote` object containing title and body of currently active note\r\n */\r\nconst getActiveNote = (): UserNote | undefined => {\r\n  return getNoteByUUID(docketProps.activeNoteUUID);\r\n};\r\n\r\n/**\r\n * Render markdown from the editor to preview panel.\r\n */\r\nconst renderMarkdown = () => {\r\n  const mdRenderPanel = <HTMLElement>document.getElementById(\"markdownOutput\");\r\n  if (mdRenderPanel.style.display === \"none\") {\r\n    return;\r\n  } // Prevent rendering when editor is minimized\r\n\r\n  // Parse markdown and sanitize HTML output\r\n  const editorText = getHTMLEditorText();\r\n  mdRenderPanel.innerHTML = DOMPurify.sanitize(\r\n    marked.parse(editorText) as keyof typeof String\r\n  );\r\n};\r\n\r\n/**\r\n * Load active note from `noteList` by UUID to the editor.\r\n * @param uuid UUID of note to load\r\n */\r\nconst noteClickHandler = (uuid: string) => {\r\n  const userNote = <UserNote>getNoteByUUID(uuid);\r\n  setActiveNote(userNote);\r\n};\r\n\r\n/**\r\n * Update saved notes in the navbar.\r\n *\r\n * This function sorts the saved notes by their order and renders them as links in the navbar.\r\n * Also initializes drag-and-drop functionality for reordering notes.\r\n */\r\nconst renderNoteList = () => {\r\n  // console.log(\"Rendering note list...\");\r\n  // Load all saved notes to the navbar\r\n  const noteListElement = document.getElementById(\"noteList\");\r\n  (<HTMLElement>noteListElement).innerHTML = \"\";\r\n  let UUIDsByIndex = [...docketProps.noteStore.UUIDToIndex.entries()].sort(\r\n    (a, b) => a[1] - b[1]\r\n  );\r\n  // console.log(UUIDsByIndex)\r\n  UUIDsByIndex.forEach((uuidAndIndex, _index) => {\r\n    // Create a new list item for each note\r\n    let uuid = uuidAndIndex[0];\r\n    let note = docketProps.noteStore.noteMap.get(uuid);\r\n    if (!note) {\r\n      return;\r\n    }\r\n    let noteElement: HTMLLIElement = document.createElement(\"li\");\r\n    noteElement.classList.add(\"noteListItem\");\r\n    noteElement.id = uuid;\r\n    noteElement.setAttribute(\"tabindex\", \"0\");\r\n    noteElement.title = note.title; // Set full title as tooltip\r\n    noteElement.draggable = true;\r\n\r\n    // Add event listeners for hover, drag, and click events\r\n    noteElement.addEventListener(\"mouseover\", (e) => {\r\n      (<HTMLLIElement>e.target).classList.add(\"hover\");\r\n    });\r\n    noteElement.addEventListener(\"mouseout\", (e) => {\r\n      (<HTMLLIElement>e.target).classList.remove(\"hover\");\r\n    });\r\n    // Drag and drop functionality\r\n    noteElement.addEventListener(\"dragstart\", (e) => {\r\n      if (e.dataTransfer != undefined) {\r\n        e.dataTransfer.effectAllowed = \"move\";\r\n        e.dataTransfer.setData(\"text/plain\", note.uuid);\r\n        docketProps.tempProps.draggedNote = <HTMLLIElement>e.target;\r\n        noteElement.classList.add(\"dragging\");\r\n      }\r\n    });\r\n    noteElement.addEventListener(\"dragend\", () => {\r\n      if (docketProps.tempProps.draggedNote) {\r\n        docketProps.tempProps.draggedNote.classList.remove(\"dragging\");\r\n        docketProps.tempProps.draggedNote = null;\r\n      }\r\n    });\r\n    noteElement.addEventListener(\"dragover\", (e) => {\r\n      e.preventDefault();\r\n      if (e.dataTransfer != undefined) {\r\n        e.dataTransfer.dropEffect = \"move\";\r\n        (<HTMLLIElement>e.target).classList.add(\"over\");\r\n      }\r\n    });\r\n    noteElement.addEventListener(\"dragleave\", (e) => {\r\n      (<HTMLLIElement>e.target).classList.remove(\"over\");\r\n    });\r\n    noteElement.addEventListener(\"drop\", (e) => {\r\n      e.preventDefault();\r\n      (<HTMLLIElement>e.target).classList.remove(\"over\");\r\n      // Move the note to the new index\r\n      if (!(<HTMLElement>e.target).classList.contains(\"noteListItem\")) {\r\n        console.error(\"Target is not a noteListItem\");\r\n        return;\r\n      }\r\n      if (e.dataTransfer == undefined) {\r\n        return;\r\n      }\r\n      const draggedUUID = e.dataTransfer.getData(\"text/plain\");\r\n      const targetUUID = (<HTMLLIElement>e.target).id;\r\n      if (!draggedUUID || !targetUUID) {\r\n        return;\r\n      }\r\n      const targetIndex = docketProps.noteStore.UUIDToIndex.get(targetUUID)!;\r\n\r\n      // Reparent the note list\r\n      const parentElement = (<HTMLElement>e.target).parentElement;\r\n      if (targetIndex === docketProps.noteStore.noteMap.size) {\r\n        parentElement?.insertBefore(\r\n          docketProps.tempProps.draggedNote!,\r\n          null\r\n        );\r\n      } else if (\r\n        targetIndex > docketProps.noteStore.UUIDToIndex.get(draggedUUID)!\r\n      ) {\r\n        parentElement?.insertBefore(\r\n          docketProps.tempProps.draggedNote!,\r\n          (<HTMLElement>e.target).nextElementSibling\r\n        );\r\n      } else {\r\n        parentElement?.insertBefore(\r\n          docketProps.tempProps.draggedNote!,\r\n          <HTMLElement>e.target\r\n        );\r\n      }\r\n      // Update note order in note store\r\n      moveNoteToIndex(draggedUUID, targetIndex!);\r\n    });\r\n    noteElement.addEventListener(\r\n      \"click\",\r\n      noteClickHandler.bind(null, note.uuid)\r\n    );\r\n\r\n    // Set note title and add to sidebar\r\n    noteElement.innerHTML = DOMPurify.sanitize(note.title);\r\n    (<HTMLElement>noteListElement).appendChild(noteElement);\r\n  });\r\n};\r\n\r\n/** Save changes to the currently active note to note store and indexedDB. */\r\nconst saveActiveNote = () => {\r\n  if (!docketProps.dbConnection) {\r\n    alert(\r\n      \"Error: Database connection is not initialized. Note has not been saved.\"\r\n    );\r\n    return;\r\n  }\r\n  const userNote = getActiveNote();\r\n  if (userNote) {\r\n    docketProps.noteStore.noteMap.set(userNote.uuid, userNote);\r\n    // Update the note's title and body from the editor\r\n    userNote.title = htmlDecode(getHTMLNoteTitle());\r\n    userNote.body = htmlDecode(getHTMLEditorText());\r\n    userNote.lastUpdated = Date.now();\r\n\r\n    // Add or update the note in indexedDB\r\n    const transaction = docketProps.dbConnection.transaction(\r\n      \"notes\",\r\n      \"readwrite\"\r\n    );\r\n    const notesStore = transaction.objectStore(\"notes\");\r\n    notesStore.put(userNote);\r\n  }\r\n};\r\n\r\nconst saveNoteOrder = () => {\r\n  const serialized = JSON.stringify(\r\n    Array.from(docketProps.noteStore.indexToUUID)\r\n  );\r\n  docketProps.dbConnection\r\n    ?.transaction(\"noteOrder\", \"readwrite\")\r\n    .objectStore(\"noteOrder\")\r\n    .put({ index: 1, order: serialized });\r\n};\r\n\r\n  /**\r\n   * The note order is stored as a single entry in the `noteOrder` object store with key `1`.\r\n   * The value is a JSON string representing an array of <index, uuid> pairs.\r\n   * This function retrieves that entry and reconstructs the `indexToUUID` and `UUIDToIndex` maps.\r\n   */\r\nconst loadIndexedDbNoteOrder = (db: IDBDatabase) => {\r\n  const request = db.transaction(\"noteOrder\", \"readonly\")\r\n    .objectStore(\"noteOrder\")\r\n    .getAll(1);\r\n  request.onsuccess = (event) => {\r\n    const serialized = (event.target as IDBRequest).result[0][\"order\"];\r\n    const parsed = JSON.parse(serialized);\r\n\r\n    docketProps.noteStore.indexToUUID = new Map(parsed);\r\n    docketProps.noteStore.indexToUUID.forEach(\r\n      (uuid: string, index: number) => {\r\n        docketProps.noteStore.UUIDToIndex.set(uuid, index);\r\n      }\r\n    );\r\n  };\r\n};\r\n\r\ninterface LastExecuted {\r\n  msSinceLastInput: number;\r\n  msSinceLastUpdate: number;\r\n}\r\n\r\n/** Debounce rendering for final input detected. */\r\nconst debounce = (lastExecuted: LastExecuted) => {\r\n  if (Date.now() - lastExecuted.msSinceLastInput > timeout) {\r\n    // console.log(\"Debounce\")\r\n    renderMarkdown();\r\n    saveActiveNote();\r\n    renderNoteList();\r\n  }\r\n};\r\n\r\n/**\r\n * Input handler for updates to the markdown editor/title\r\n * @param lastExecuted LastExecuted object containing timestamps of last input and last update\r\n */\r\nconst handleInput = (lastExecuted: LastExecuted) => {\r\n  let currTime = Date.now();\r\n  // debounce final input\r\n  lastExecuted.msSinceLastInput = currTime;\r\n  setTimeout(debounce, timeout, lastExecuted);\r\n\r\n  // rerender every `timeout` ms while typing\r\n  if (currTime - lastExecuted.msSinceLastUpdate > timeout) {\r\n    renderMarkdown();\r\n    saveActiveNote();\r\n    renderNoteList();\r\n    lastExecuted.msSinceLastUpdate = currTime;\r\n  }\r\n};\r\n\r\n/**\r\n * Save entire note store to indexedDB.\r\n */\r\nconst saveNoteStore = () => {\r\n  if (!docketProps.dbConnection) {\r\n    alert(\r\n      \"Error: Database connection is not initialized. Note store has not been saved.\"\r\n    );\r\n    return;\r\n  }\r\n\r\n  const transaction = docketProps.dbConnection.transaction(\r\n    \"notes\",\r\n    \"readwrite\"\r\n  );\r\n  const notesStore = transaction.objectStore(\"notes\");\r\n  for (const note of docketProps.noteStore.noteMap.values()) {\r\n    notesStore.put(note);\r\n  }\r\n};\r\n\r\n/**\r\n * Start a new note and add it to the note store and indexedDB.\r\n */\r\nconst createNote = (noteTemplate?: Partial<UserNote>): UserNote => {\r\n  // Create a new note object\r\n  const newNote: UserNote = {\r\n    uuid: crypto.randomUUID(),\r\n    title: noteTemplate?.title || \"New Note\",\r\n    body: noteTemplate?.body || \"\",\r\n    lastUpdated: Date.now(),\r\n  };\r\n\r\n  // Add the new note to the note store\r\n  setNoteByUUID(newNote.uuid, newNote);\r\n\r\n  // Add new note to indexedDB\r\n  docketProps.dbConnection\r\n    ?.transaction(\"notes\", \"readwrite\")\r\n    .objectStore(\"notes\")\r\n    .add(newNote);\r\n\r\n  // Render the updated note list\r\n  renderNoteList();\r\n  saveNoteOrder();\r\n  return newNote;\r\n};\r\n\r\n/**\r\n * Set active note to a `UserNote` object.\r\n * @param userNote UserNote object to set as active note\r\n */\r\nconst setActiveNote = (userNote: UserNote) => {\r\n  // Remove styling from previous active note\r\n  const prevActiveNote = <HTMLLIElement>(\r\n    document.getElementById(docketProps.activeNoteUUID)\r\n  );\r\n  prevActiveNote?.classList.remove(\"active\");\r\n  // Set active note UUID\r\n  docketProps.activeNoteUUID = userNote.uuid;\r\n  // Set active note in local storage\r\n  chrome.storage.local.set({ activeNoteUUID: docketProps.activeNoteUUID });\r\n  const noteTitleElement = <HTMLInputElement>(\r\n    document.getElementById(\"noteTitle\")\r\n  );\r\n  const noteEditorElement = <HTMLInputElement>(\r\n    document.getElementById(\"markdownInput\")\r\n  );\r\n  const noteListItem = <HTMLLIElement>(\r\n    document.getElementById(docketProps.activeNoteUUID)\r\n  );\r\n  noteTitleElement.value = docketProps.noteStore.noteMap.get(\r\n    userNote.uuid\r\n  )!.title;\r\n  noteEditorElement.value = docketProps.noteStore.noteMap.get(\r\n    userNote.uuid\r\n  )!.body;\r\n  noteListItem?.classList.add(\"active\");\r\n  saveActiveNote();\r\n  renderMarkdown();\r\n};\r\n\r\nconst newNoteHandler = () => {\r\n  setActiveNote(createNote());\r\n}\r\n\r\n/**\r\n * Calls `deleteNoteByUUID` on `currentUUID` if user confirms deletion.\r\n */\r\nconst deleteActiveNote = () => {\r\n  if (confirm(\"Are you sure you want to delete this note?\")) {\r\n    deleteNoteByUUID(docketProps.activeNoteUUID);\r\n  }\r\n};\r\n\r\n/**\r\n * Download the currently active note as a markdown file.\r\n */\r\nconst downloadActiveNote = () => {\r\n  const activeNote = getActiveNote();\r\n  if (!activeNote) {\r\n    return;\r\n  }\r\n  const blob = new Blob([activeNote.body], { type: \"text/markdown\" });\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement(\"a\");\r\n  a.href = url;\r\n  a.download = activeNote.title + \".md\";\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  URL.revokeObjectURL(url);\r\n};\r\n\r\n/**\r\n * Set theme for all elements with `data-theme` attribute.\r\n * @param theme name of theme to set\r\n */\r\nconst setTheme = (theme: string) => {\r\n  chrome.storage.local.set(docketProps.settings);\r\n  const themedElements = document.querySelectorAll(\"[data-theme]\");\r\n  themedElements.forEach((element) => {\r\n    element.setAttribute(\"data-theme\", theme);\r\n  });\r\n};\r\n\r\n/**\r\n * Toggle dark mode on or off depending on the state of the `darkModeSlider` checkbox.\r\n */\r\nconst toggleDarkMode = () => {\r\n  const darkModeSlider = <HTMLInputElement>(\r\n    document.getElementById(\"darkModeSlider\")\r\n  );\r\n  docketProps.settings.uiTheme = darkModeSlider.checked ? \"dark\" : \"light\";\r\n  // console.log(`Setting theme to ${docketInstance.settings.uiTheme}`)\r\n  setTheme(docketProps.settings.uiTheme);\r\n};\r\n\r\n/**\r\n * Update code style based on selection from `codeStyleDropdown`.\r\n */\r\nconst updateCodeStyle = () => {\r\n  // clear old stylesheet if exists\r\n  const oldStyleSheet = document.getElementById(\"codeStylesheet\");\r\n  if (oldStyleSheet) {\r\n    oldStyleSheet.parentNode?.removeChild(oldStyleSheet);\r\n  }\r\n\r\n  // set new stylesheet\r\n  docketProps.settings.codeStyle = (<HTMLSelectElement>(\r\n    document.getElementById(\"codeStyleDropdown\")\r\n  )).value;\r\n  chrome.storage.local.set(docketProps.settings);\r\n  const codeStylesheetElement = document.createElement(\"link\");\r\n  codeStylesheetElement.rel = \"stylesheet\";\r\n  codeStylesheetElement.href = `code_themes/${docketProps.settings.codeStyle}.css`;\r\n  codeStylesheetElement.id = \"codeStylesheet\";\r\n  document.head.appendChild(codeStylesheetElement);\r\n};\r\n\r\n/**\r\n * Toggle markdown input display on or off.\r\n */\r\nconst toggleMarkdownInput = () => {\r\n  const markdownInput = <HTMLInputElement>(\r\n    document.getElementById(\"markdownInput\")\r\n  );\r\n  const editorDivider = <HTMLElement>(\r\n    document.getElementById(\"editorDivider\")\r\n  );\r\n  if (!markdownInput.style.display || markdownInput.style.display === \"block\") {\r\n    markdownInput.style.display = \"none\";\r\n    editorDivider.style.display = \"none\";\r\n  } else {\r\n    markdownInput.style.display = \"block\";\r\n    editorDivider.style.display = \"block\";\r\n  }\r\n};\r\n\r\n/**\r\n * Toggle markdown renderer display based on editor width or value of `mdRenderToggle` checkbox.\r\n */\r\nconst toggleMarkdownOutput = () => {\r\n  const mdRenderSlider = <HTMLInputElement>(\r\n    document.getElementById(\"mdRenderSlider\")\r\n  );\r\n  const markdownOutput = <HTMLElement>(\r\n    document.getElementById(\"markdownOutput\")\r\n  );\r\n  if (!mdRenderSlider.checked) {\r\n    markdownOutput.style.display = \"none\";\r\n  } else {\r\n    markdownOutput.style.display = \"block\";\r\n  }\r\n};\r\n\r\n/**\r\n * Toggle sidebar display on or off.\r\n */\r\nconst toggleSidebar = () => {\r\n  const sidebar = <HTMLElement>document.getElementById(\"sidebar\");\r\n  if ((!sidebar.style.display && window.innerWidth < 768) || sidebar.style.display === \"none\") {\r\n    sidebar.style.display = \"flex\";\r\n  } else {\r\n    sidebar.style.display = \"none\";\r\n  }\r\n};\r\n\r\n/**\r\n * Run all initialization functions to set up the Docket application.\r\n */\r\nconst initializeDocket = () => {\r\n  // Sync notes from indexedDB\r\n  // console.log(\"Initializing IndexedDB connection...\")\r\n  initDbConnection();\r\n\r\n  // Load settings from local storage\r\n  chrome.storage.local.get(null, (result) => {\r\n    docketProps.settings.codeStyle = result.codeStyle || \"github\";\r\n    const codeStyleDropdown = <HTMLSelectElement>(\r\n      document.getElementById(\"codeStyleDropdown\")\r\n    );\r\n    codeStyleDropdown.value = docketProps.settings.codeStyle;\r\n    updateCodeStyle();\r\n\r\n    docketProps.settings.uiTheme = result.uiTheme || \"light\";\r\n    const darkModeSlider = <HTMLInputElement>(\r\n      document.getElementById(\"darkModeSlider\")\r\n    );\r\n    darkModeSlider.checked = result.uiTheme === \"dark\";\r\n    toggleDarkMode();\r\n  });\r\n\r\n  // Configure popup specific elements\r\n  const bodyElement = <HTMLElement>document.body;\r\n  if (bodyElement.classList.contains(\"popup\")) {\r\n    // Display notes in reader mode by default\r\n    toggleMarkdownInput();\r\n  }\r\n};\r\n\r\nwindow.addEventListener(\"load\", initializeDocket);\r\n\r\nwindow.addEventListener(\"resize\", toggleMarkdownOutput);\r\n\r\n// SIDEBAR TOGGLE EVENT LISTENER\r\nwindow.addEventListener(\"keydown\", (e) => {\r\n  if (e.key === \"h\" && e.ctrlKey) {\r\n    e.preventDefault();\r\n    toggleSidebar();\r\n  }\r\n});\r\n\r\n// CODESTYLE EVENT LISTENER\r\nconst codeStyleDropdown = <HTMLSelectElement>(\r\n  document.getElementById(\"codeStyleDropdown\")\r\n);\r\ncodeStyleDropdown.addEventListener(\"change\", updateCodeStyle);\r\n\r\n// DARKMODE EVENT LISTENER\r\nconst darkModeSlider = <HTMLInputElement>(\r\n  document.getElementById(\"darkModeSlider\")\r\n);\r\ndarkModeSlider.addEventListener(\"change\", toggleDarkMode);\r\n\r\nconst mdRenderSlider = <HTMLInputElement>(\r\n  document.getElementById(\"mdRenderSlider\")\r\n);\r\nmdRenderSlider.addEventListener(\"change\", toggleMarkdownOutput);\r\n\r\n// DELETE NOTE EVENT LISTENER\r\nconst deleteNoteButton = <HTMLButtonElement>(\r\n  document.getElementById(\"deleteNoteButton\")\r\n);\r\ndeleteNoteButton.addEventListener(\"click\", deleteActiveNote);\r\n\r\n// NEWNOTE EVENT LISTENER\r\nconst newNoteButton = <HTMLButtonElement>(\r\n  document.getElementById(\"newNoteButton\")\r\n);\r\nnewNoteButton.addEventListener(\"click\", newNoteHandler);\r\n\r\n// DOWNLOAD NOTE EVENT LISTENER\r\nconst downloadNoteButton = <HTMLButtonElement>(\r\n  document.getElementById(\"downloadNoteButton\")\r\n);\r\ndownloadNoteButton.addEventListener(\"click\", downloadActiveNote);\r\n\r\n// TOGGLE MARKDOWN INPUT EVENT LISTENER\r\nconst toggleMarkdownInputButton = <HTMLButtonElement>(\r\n  document.getElementById(\"readerModeButton\")\r\n);\r\ntoggleMarkdownInputButton.addEventListener(\"click\", toggleMarkdownInput);\r\n\r\n// EDITOR EVENT LISTENERS\r\nconst markdownInput = <HTMLInputElement>(\r\n  document.getElementById(\"markdownInput\")\r\n);\r\nconst mdTitle = <HTMLElement>document.getElementById(\"noteTitle\");\r\n\r\n/**\r\n * Resync notes when tab is hidden and made visible\r\n */\r\ndocument.addEventListener(\"visibilitychange\", () => {\r\n  if (document.visibilityState === \"visible\") {\r\n    initializeDocket();\r\n  }\r\n});\r\n\r\n/**\r\n * Resync notes when window is focused\r\n */\r\nwindow.addEventListener(\"focus\", initializeDocket);\r\n\r\nmarkdownInput.addEventListener(\r\n  \"input\",\r\n  handleInput.bind(undefined, {\r\n    msSinceLastInput: Date.now(),\r\n    msSinceLastUpdate: Date.now(),\r\n  })\r\n);\r\n\r\nmdTitle.addEventListener(\r\n  \"input\",\r\n  handleInput.bind(undefined, {\r\n    msSinceLastInput: Date.now(),\r\n    msSinceLastUpdate: Date.now(),\r\n  })\r\n);\r\n\r\n// Override default tab behaviour\r\nmarkdownInput.addEventListener(\"keydown\", (e) => {\r\n  if (e.key === \"Tab\") {\r\n    e.preventDefault();\r\n    markdownInput.setRangeText(\r\n      \"\\t\",\r\n      markdownInput.selectionStart || 0,\r\n      markdownInput.selectionEnd || 0,\r\n      \"end\"\r\n    );\r\n  }\r\n  if (e.key === \"b\" && e.ctrlKey) {\r\n    if (markdownInput.selectionStart !== markdownInput.selectionEnd) {\r\n      e.preventDefault();\r\n      markdownInput.setRangeText(\r\n        \"**\" +\r\n          markdownInput.value.substring(\r\n            markdownInput.selectionStart || 0,\r\n            markdownInput.selectionEnd || 0\r\n          ) +\r\n          \"**\",\r\n        markdownInput.selectionStart || 0,\r\n        markdownInput.selectionEnd || 0,\r\n        \"select\"\r\n      );\r\n    }\r\n  }\r\n  if (e.key === \"i\" && e.ctrlKey) {\r\n    if (markdownInput.selectionStart !== markdownInput.selectionEnd) {\r\n      e.preventDefault();\r\n      markdownInput.setRangeText(\r\n        \"*\" +\r\n          markdownInput.value.substring(\r\n            markdownInput.selectionStart || 0,\r\n            markdownInput.selectionEnd || 0\r\n          ) +\r\n          \"*\",\r\n        markdownInput.selectionStart || 0,\r\n        markdownInput.selectionEnd || 0,\r\n        \"select\"\r\n      );\r\n    }\r\n  }\r\n  if (e.key === \"~\") {\r\n    if (markdownInput.selectionStart !== markdownInput.selectionEnd) {\r\n      e.preventDefault();\r\n      markdownInput.setRangeText(\r\n        \"~~\" +\r\n          markdownInput.value.substring(\r\n            markdownInput.selectionStart || 0,\r\n            markdownInput.selectionEnd || 0\r\n          ) +\r\n          \"~~\",\r\n        markdownInput.selectionStart || 0,\r\n        markdownInput.selectionEnd || 0,\r\n        \"select\"\r\n      );\r\n    }\r\n  }\r\n  if (e.key === \"`\") {\r\n    if (markdownInput.selectionStart !== markdownInput.selectionEnd) {\r\n      e.preventDefault();\r\n      markdownInput.setRangeText(\r\n        \"`\" +\r\n          markdownInput.value.substring(\r\n            markdownInput.selectionStart || 0,\r\n            markdownInput.selectionEnd || 0\r\n          ) +\r\n          \"`\",\r\n        markdownInput.selectionStart || 0,\r\n        markdownInput.selectionEnd || 0,\r\n        \"select\"\r\n      );\r\n    }\r\n  }\r\n  if (e.key === \"l\" && e.ctrlKey) {\r\n    e.preventDefault();\r\n    markdownInput.setRangeText(\r\n      \"[\" +\r\n        markdownInput.value.substring(\r\n          markdownInput.selectionStart || 0,\r\n          markdownInput.selectionEnd || 0\r\n        ) +\r\n        \"](url)\",\r\n      markdownInput.selectionStart || 0,\r\n      markdownInput.selectionEnd || 0,\r\n      \"select\"\r\n    );\r\n  }\r\n  renderMarkdown();\r\n  saveActiveNote();\r\n});\r\n","// https://nodejs.org/api/packages.html#packages_writing_dual_packages_while_avoiding_or_minimizing_hazards\nimport HighlightJS from '../lib/core.js';\nexport { HighlightJS };\nexport default HighlightJS;\n","/*\nLanguage: C\nCategory: common, system\nWebsite: https://en.wikipedia.org/wiki/C_(programming_language)\n*/\n\n/** @type LanguageFn */\nfunction c(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '('\n    + DECLTYPE_AUTO_RE + '|'\n    + regex.optional(NAMESPACE_RE)\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\n  + ')';\n\n\n  const TYPES = {\n    className: 'type',\n    variants: [\n      { begin: '\\\\b[a-z\\\\d_]*_t\\\\b' },\n      { match: /\\batomic_[a-z]{3,6}\\b/ }\n    ]\n\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + \"|.)\",\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      { match: /\\b(0b[01']+)/ },  \n      { match: /(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)/ },  \n      { match: /(-?)\\b(0[xX][a-fA-F0-9]+(?:'[a-fA-F0-9]+)*(?:\\.[a-fA-F0-9]*(?:'[a-fA-F0-9]*)*)?(?:[pP][-+]?[0-9]+)?(l|L)?(u|U)?)/ },  \n      { match: /(-?)\\b\\d+(?:'\\d+)*(?:\\.\\d*(?:'\\d*)*)?(?:[eE][-+]?\\d+)?/ }  \n  ],\n    relevance: 0\n  };  \n  \n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'if else elif endif define undef warning error line '\n        + 'pragma _Pragma ifdef ifndef elifdef elifndef include' },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, { className: 'string' }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  const C_KEYWORDS = [\n    \"asm\",\n    \"auto\",\n    \"break\",\n    \"case\",\n    \"continue\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"for\",\n    \"fortran\",\n    \"goto\",\n    \"if\",\n    \"inline\",\n    \"register\",\n    \"restrict\",\n    \"return\",\n    \"sizeof\",\n    \"typeof\",\n    \"typeof_unqual\",\n    \"struct\",\n    \"switch\",\n    \"typedef\",\n    \"union\",\n    \"volatile\",\n    \"while\",\n    \"_Alignas\",\n    \"_Alignof\",\n    \"_Atomic\",\n    \"_Generic\",\n    \"_Noreturn\",\n    \"_Static_assert\",\n    \"_Thread_local\",\n    // aliases\n    \"alignas\",\n    \"alignof\",\n    \"noreturn\",\n    \"static_assert\",\n    \"thread_local\",\n    // not a C keyword but is, for all intents and purposes, treated exactly like one.\n    \"_Pragma\"\n  ];\n\n  const C_TYPES = [\n    \"float\",\n    \"double\",\n    \"signed\",\n    \"unsigned\",\n    \"int\",\n    \"short\",\n    \"long\",\n    \"char\",\n    \"void\",\n    \"_Bool\",\n    \"_BitInt\",\n    \"_Complex\",\n    \"_Imaginary\",\n    \"_Decimal32\",\n    \"_Decimal64\",\n    \"_Decimal96\",\n    \"_Decimal128\",\n    \"_Decimal64x\",\n    \"_Decimal128x\",\n    \"_Float16\",\n    \"_Float32\",\n    \"_Float64\",\n    \"_Float128\",\n    \"_Float32x\",\n    \"_Float64x\",\n    \"_Float128x\",\n    // modifiers\n    \"const\",\n    \"static\",\n    \"constexpr\",\n    // aliases\n    \"complex\",\n    \"bool\",\n    \"imaginary\"\n  ];\n\n  const KEYWORDS = {\n    keyword: C_KEYWORDS,\n    type: C_TYPES,\n    literal: 'true false NULL',\n    // TODO: apply hinting work similar to what was done in cpp.js\n    built_in: 'std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream '\n      + 'auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set '\n      + 'unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos '\n      + 'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp '\n      + 'fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper '\n      + 'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow '\n      + 'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp '\n      + 'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan '\n      + 'vfprintf vprintf vsprintf endl initializer_list unique_ptr',\n  };\n\n  const EXPRESSION_CONTAINS = [\n    PREPROCESSOR,\n    TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ hljs.inherit(TITLE_MODE, { className: \"title.function\" }) ],\n        relevance: 0\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              TYPES\n            ]\n          }\n        ]\n      },\n      TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: \"C\",\n    aliases: [ 'h' ],\n    keywords: KEYWORDS,\n    // Until differentiations are added between `c` and `cpp`, `c` will\n    // not be auto-detected to avoid auto-detect conflicts between C and C++\n    disableAutodetect: true,\n    illegal: '</',\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: KEYWORDS\n        },\n        {\n          className: 'class',\n          beginKeywords: 'enum class struct union',\n          end: /[{;:<>=]/,\n          contains: [\n            { beginKeywords: \"final class struct\" },\n            hljs.TITLE_MODE\n          ]\n        }\n      ]),\n    exports: {\n      preprocessor: PREPROCESSOR,\n      strings: STRINGS,\n      keywords: KEYWORDS\n    }\n  };\n}\n\nexport { c as default };\n","/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cpp(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(?!struct)('\n    + DECLTYPE_AUTO_RE + '|'\n    + regex.optional(NAMESPACE_RE)\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\n  + ')';\n\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      // Floating-point literal.\n      { begin:\n        \"[+-]?(?:\" // Leading sign.\n          // Decimal.\n          + \"(?:\"\n            +\"[0-9](?:'?[0-9])*\\\\.(?:[0-9](?:'?[0-9])*)?\"\n            + \"|\\\\.[0-9](?:'?[0-9])*\"\n          + \")(?:[Ee][+-]?[0-9](?:'?[0-9])*)?\"\n          + \"|[0-9](?:'?[0-9])*[Ee][+-]?[0-9](?:'?[0-9])*\"\n          // Hexadecimal.\n          + \"|0[Xx](?:\"\n            +\"[0-9A-Fa-f](?:'?[0-9A-Fa-f])*(?:\\\\.(?:[0-9A-Fa-f](?:'?[0-9A-Fa-f])*)?)?\"\n            + \"|\\\\.[0-9A-Fa-f](?:'?[0-9A-Fa-f])*\"\n          + \")[Pp][+-]?[0-9](?:'?[0-9])*\"\n        + \")(?:\" // Literal suffixes.\n          + \"[Ff](?:16|32|64|128)?\"\n          + \"|(BF|bf)16\"\n          + \"|[Ll]\"\n          + \"|\" // Literal suffix is optional.\n        + \")\"\n      },\n      // Integer literal.\n      { begin:\n        \"[+-]?\\\\b(?:\" // Leading sign.\n          + \"0[Bb][01](?:'?[01])*\" // Binary.\n          + \"|0[Xx][0-9A-Fa-f](?:'?[0-9A-Fa-f])*\" // Hexadecimal.\n          + \"|0(?:'?[0-7])*\" // Octal or just a lone zero.\n          + \"|[1-9](?:'?[0-9])*\" // Decimal.\n        + \")(?:\" // Literal suffixes.\n          + \"[Uu](?:LL?|ll?)\"\n          + \"|[Uu][Zz]?\"\n          + \"|(?:LL?|ll?)[Uu]?\"\n          + \"|[Zz][Uu]\"\n          + \"|\" // Literal suffix is optional.\n        + \")\"\n        // Note: there are user-defined literal suffixes too, but perhaps having the custom suffix not part of the\n        // literal highlight actually makes it stand out more.\n      }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'if else elif endif define undef warning error line '\n        + 'pragma _Pragma ifdef ifndef include' },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, { className: 'string' }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_KEYWORDS = [\n    'alignas',\n    'alignof',\n    'and',\n    'and_eq',\n    'asm',\n    'atomic_cancel',\n    'atomic_commit',\n    'atomic_noexcept',\n    'auto',\n    'bitand',\n    'bitor',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'co_await',\n    'co_return',\n    'co_yield',\n    'compl',\n    'concept',\n    'const_cast|10',\n    'consteval',\n    'constexpr',\n    'constinit',\n    'continue',\n    'decltype',\n    'default',\n    'delete',\n    'do',\n    'dynamic_cast|10',\n    'else',\n    'enum',\n    'explicit',\n    'export',\n    'extern',\n    'false',\n    'final',\n    'for',\n    'friend',\n    'goto',\n    'if',\n    'import',\n    'inline',\n    'module',\n    'mutable',\n    'namespace',\n    'new',\n    'noexcept',\n    'not',\n    'not_eq',\n    'nullptr',\n    'operator',\n    'or',\n    'or_eq',\n    'override',\n    'private',\n    'protected',\n    'public',\n    'reflexpr',\n    'register',\n    'reinterpret_cast|10',\n    'requires',\n    'return',\n    'sizeof',\n    'static_assert',\n    'static_cast|10',\n    'struct',\n    'switch',\n    'synchronized',\n    'template',\n    'this',\n    'thread_local',\n    'throw',\n    'transaction_safe',\n    'transaction_safe_dynamic',\n    'true',\n    'try',\n    'typedef',\n    'typeid',\n    'typename',\n    'union',\n    'using',\n    'virtual',\n    'volatile',\n    'while',\n    'xor',\n    'xor_eq'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_TYPES = [\n    'bool',\n    'char',\n    'char16_t',\n    'char32_t',\n    'char8_t',\n    'double',\n    'float',\n    'int',\n    'long',\n    'short',\n    'void',\n    'wchar_t',\n    'unsigned',\n    'signed',\n    'const',\n    'static'\n  ];\n\n  const TYPE_HINTS = [\n    'any',\n    'auto_ptr',\n    'barrier',\n    'binary_semaphore',\n    'bitset',\n    'complex',\n    'condition_variable',\n    'condition_variable_any',\n    'counting_semaphore',\n    'deque',\n    'false_type',\n    'flat_map',\n    'flat_set',\n    'future',\n    'imaginary',\n    'initializer_list',\n    'istringstream',\n    'jthread',\n    'latch',\n    'lock_guard',\n    'multimap',\n    'multiset',\n    'mutex',\n    'optional',\n    'ostringstream',\n    'packaged_task',\n    'pair',\n    'promise',\n    'priority_queue',\n    'queue',\n    'recursive_mutex',\n    'recursive_timed_mutex',\n    'scoped_lock',\n    'set',\n    'shared_future',\n    'shared_lock',\n    'shared_mutex',\n    'shared_timed_mutex',\n    'shared_ptr',\n    'stack',\n    'string_view',\n    'stringstream',\n    'timed_mutex',\n    'thread',\n    'true_type',\n    'tuple',\n    'unique_lock',\n    'unique_ptr',\n    'unordered_map',\n    'unordered_multimap',\n    'unordered_multiset',\n    'unordered_set',\n    'variant',\n    'vector',\n    'weak_ptr',\n    'wstring',\n    'wstring_view'\n  ];\n\n  const FUNCTION_HINTS = [\n    'abort',\n    'abs',\n    'acos',\n    'apply',\n    'as_const',\n    'asin',\n    'atan',\n    'atan2',\n    'calloc',\n    'ceil',\n    'cerr',\n    'cin',\n    'clog',\n    'cos',\n    'cosh',\n    'cout',\n    'declval',\n    'endl',\n    'exchange',\n    'exit',\n    'exp',\n    'fabs',\n    'floor',\n    'fmod',\n    'forward',\n    'fprintf',\n    'fputs',\n    'free',\n    'frexp',\n    'fscanf',\n    'future',\n    'invoke',\n    'isalnum',\n    'isalpha',\n    'iscntrl',\n    'isdigit',\n    'isgraph',\n    'islower',\n    'isprint',\n    'ispunct',\n    'isspace',\n    'isupper',\n    'isxdigit',\n    'labs',\n    'launder',\n    'ldexp',\n    'log',\n    'log10',\n    'make_pair',\n    'make_shared',\n    'make_shared_for_overwrite',\n    'make_tuple',\n    'make_unique',\n    'malloc',\n    'memchr',\n    'memcmp',\n    'memcpy',\n    'memset',\n    'modf',\n    'move',\n    'pow',\n    'printf',\n    'putchar',\n    'puts',\n    'realloc',\n    'scanf',\n    'sin',\n    'sinh',\n    'snprintf',\n    'sprintf',\n    'sqrt',\n    'sscanf',\n    'std',\n    'stderr',\n    'stdin',\n    'stdout',\n    'strcat',\n    'strchr',\n    'strcmp',\n    'strcpy',\n    'strcspn',\n    'strlen',\n    'strncat',\n    'strncmp',\n    'strncpy',\n    'strpbrk',\n    'strrchr',\n    'strspn',\n    'strstr',\n    'swap',\n    'tan',\n    'tanh',\n    'terminate',\n    'to_underlying',\n    'tolower',\n    'toupper',\n    'vfprintf',\n    'visit',\n    'vprintf',\n    'vsprintf'\n  ];\n\n  const LITERALS = [\n    'NULL',\n    'false',\n    'nullopt',\n    'nullptr',\n    'true'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const BUILT_IN = [ '_Pragma' ];\n\n  const CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n\n  const FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS },\n    begin: regex.concat(\n      /\\b/,\n      /(?!decltype)/,\n      /(?!if)/,\n      /(?!for)/,\n      /(?!switch)/,\n      /(?!while)/,\n      hljs.IDENT_RE,\n      regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n\n  const EXPRESSION_CONTAINS = [\n    FUNCTION_DISPATCH,\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      // needed because we do not have look-behind on the below rule\n      // to prevent it from grabbing the final : in a :: pair\n      {\n        begin: /::/,\n        relevance: 0\n      },\n      // initializers\n      {\n        begin: /:/,\n        endsWithParent: true,\n        contains: [\n          STRINGS,\n          NUMBERS\n        ]\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: 'C++',\n    aliases: [\n      'cc',\n      'c++',\n      'h++',\n      'hpp',\n      'hh',\n      'hxx',\n      'cxx'\n    ],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: { 'function.dispatch': 'built_in' },\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      FUNCTION_DISPATCH,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function|flat_map|flat_set)\\\\s*<(?!<)',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          match: [\n            // extra complexity to deal with `enum class` and `enum struct`\n            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n            /\\s+/,\n            /\\w+/\n          ],\n          className: {\n            1: 'keyword',\n            3: 'title.class'\n          }\n        }\n      ])\n  };\n}\n\nexport { cpp as default };\n","/*\nLanguage: Python\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\nWebsite: https://www.python.org\nCategory: common\n*/\n\nfunction python(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = /[\\p{XID_Start}_]\\p{XID_Continue}*/u;\n  const RESERVED_WORDS = [\n    'and',\n    'as',\n    'assert',\n    'async',\n    'await',\n    'break',\n    'case',\n    'class',\n    'continue',\n    'def',\n    'del',\n    'elif',\n    'else',\n    'except',\n    'finally',\n    'for',\n    'from',\n    'global',\n    'if',\n    'import',\n    'in',\n    'is',\n    'lambda',\n    'match',\n    'nonlocal|10',\n    'not',\n    'or',\n    'pass',\n    'raise',\n    'return',\n    'try',\n    'while',\n    'with',\n    'yield'\n  ];\n\n  const BUILT_INS = [\n    '__import__',\n    'abs',\n    'all',\n    'any',\n    'ascii',\n    'bin',\n    'bool',\n    'breakpoint',\n    'bytearray',\n    'bytes',\n    'callable',\n    'chr',\n    'classmethod',\n    'compile',\n    'complex',\n    'delattr',\n    'dict',\n    'dir',\n    'divmod',\n    'enumerate',\n    'eval',\n    'exec',\n    'filter',\n    'float',\n    'format',\n    'frozenset',\n    'getattr',\n    'globals',\n    'hasattr',\n    'hash',\n    'help',\n    'hex',\n    'id',\n    'input',\n    'int',\n    'isinstance',\n    'issubclass',\n    'iter',\n    'len',\n    'list',\n    'locals',\n    'map',\n    'max',\n    'memoryview',\n    'min',\n    'next',\n    'object',\n    'oct',\n    'open',\n    'ord',\n    'pow',\n    'print',\n    'property',\n    'range',\n    'repr',\n    'reversed',\n    'round',\n    'set',\n    'setattr',\n    'slice',\n    'sorted',\n    'staticmethod',\n    'str',\n    'sum',\n    'super',\n    'tuple',\n    'type',\n    'vars',\n    'zip'\n  ];\n\n  const LITERALS = [\n    '__debug__',\n    'Ellipsis',\n    'False',\n    'None',\n    'NotImplemented',\n    'True'\n  ];\n\n  // https://docs.python.org/3/library/typing.html\n  // TODO: Could these be supplemented by a CamelCase matcher in certain\n  // contexts, leaving these remaining only for relevance hinting?\n  const TYPES = [\n    \"Any\",\n    \"Callable\",\n    \"Coroutine\",\n    \"Dict\",\n    \"List\",\n    \"Literal\",\n    \"Generic\",\n    \"Optional\",\n    \"Sequence\",\n    \"Set\",\n    \"Tuple\",\n    \"Type\",\n    \"Union\"\n  ];\n\n  const KEYWORDS = {\n    $pattern: /[A-Za-z]\\w+|__\\w+__/,\n    keyword: RESERVED_WORDS,\n    built_in: BUILT_INS,\n    literal: LITERALS,\n    type: TYPES\n  };\n\n  const PROMPT = {\n    className: 'meta',\n    begin: /^(>>>|\\.\\.\\.) /\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n\n  const LITERAL_BRACKET = {\n    begin: /\\{\\{/,\n    relevance: 0\n  };\n\n  const STRING = {\n    className: 'string',\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([uU]|[rR])'/,\n        end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[rR])\"/,\n        end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])'/,\n        end: /'/\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])\"/,\n        end: /\"/\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'/,\n        end: /'/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n        end: /\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#numeric-literals\n  const digitpart = '[0-9](_?[0-9])*';\n  const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\n  // Whitespace after a number (or any lexical token) is needed only if its absence\n  // would change the tokenization\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#whitespace-between-tokens\n  // We deviate slightly, requiring a word boundary or a keyword\n  // to avoid accidentally recognizing *prefixes* (e.g., `0` in `0x41` or `08` or `0__1`)\n  const lookahead = `\\\\b|${RESERVED_WORDS.join('|')}`;\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // exponentfloat, pointfloat\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\n      // optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      // Note: no leading \\b because floats can start with a decimal point\n      // and we don't want to mishandle e.g. `fn(.5)`,\n      // no trailing \\b for pointfloat because it can end with a decimal point\n      // and we don't want to mishandle e.g. `0..hex()`; this should be safe\n      // because both MUST contain a decimal point and so cannot be confused with\n      // the interior part of an identifier\n      {\n        begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?(?=${lookahead})`\n      },\n      {\n        begin: `(${pointfloat})[jJ]?`\n      },\n\n      // decinteger, bininteger, octinteger, hexinteger\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\n      // optionally \"long\" in Python 2\n      // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\n      // decinteger is optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[bB](_?[01])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[oO](_?[0-7])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${lookahead})`\n      },\n\n      // imagnumber (digitpart-based)\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b(${digitpart})[jJ](?=${lookahead})`\n      }\n    ]\n  };\n  const COMMENT_TYPE = {\n    className: \"comment\",\n    begin: regex.lookahead(/# type:/),\n    end: /$/,\n    keywords: KEYWORDS,\n    contains: [\n      { // prevent keywords from coloring `type`\n        begin: /# type:/\n      },\n      // comment within a datatype comment includes no keywords\n      {\n        begin: /#/,\n        end: /\\b\\B/,\n        endsWithParent: true\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    variants: [\n      // Exclude params in functions without params\n      {\n        className: \"\",\n        begin: /\\(\\s*\\)/,\n        skip: true\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          'self',\n          PROMPT,\n          NUMBER,\n          STRING,\n          hljs.HASH_COMMENT_MODE\n        ]\n      }\n    ]\n  };\n  SUBST.contains = [\n    STRING,\n    NUMBER,\n    PROMPT\n  ];\n\n  return {\n    name: 'Python',\n    aliases: [\n      'py',\n      'gyp',\n      'ipython'\n    ],\n    unicodeRegex: true,\n    keywords: KEYWORDS,\n    illegal: /(<\\/|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      {\n        // very common convention\n        scope: 'variable.language',\n        match: /\\bself\\b/\n      },\n      {\n        // eat \"if\" prior to string so that it won't accidentally be\n        // labeled as an f-string\n        beginKeywords: \"if\",\n        relevance: 0\n      },\n      { match: /\\bor\\b/, scope: \"keyword\" },\n      STRING,\n      COMMENT_TYPE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        match: [\n          /\\bdef/, /\\s+/,\n          IDENT_RE,\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.function\"\n        },\n        contains: [ PARAMS ]\n      },\n      {\n        variants: [\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE, /\\s*/,\n              /\\(\\s*/, IDENT_RE,/\\s*\\)/\n            ],\n          },\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE\n            ],\n          }\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          6: \"title.class.inherited\",\n        }\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/,\n        end: /(?=#)|$/,\n        contains: [\n          NUMBER,\n          PARAMS,\n          STRING\n        ]\n      }\n    ]\n  };\n}\n\nexport { python as default };\n","/*\nLanguage: Plain text\nAuthor: Egor Rogov (e.rogov@postgrespro.ru)\nDescription: Plain text without any highlighting.\nCategory: common\n*/\n\nfunction plaintext(hljs) {\n  return {\n    name: 'Plain text',\n    aliases: [\n      'text',\n      'txt'\n    ],\n    disableAutodetect: true\n  };\n}\n\nexport { plaintext as default };\n","/*\nLanguage: Rust\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\nWebsite: https://www.rust-lang.org\nCategory: common, system\n*/\n\n/** @type LanguageFn */\n\nfunction rust(hljs) {\n  const regex = hljs.regex;\n  // ============================================\n  // Added to support the r# keyword, which is a raw identifier in Rust.\n  const RAW_IDENTIFIER = /(r#)?/;\n  const UNDERSCORE_IDENT_RE = regex.concat(RAW_IDENTIFIER, hljs.UNDERSCORE_IDENT_RE);\n  const IDENT_RE = regex.concat(RAW_IDENTIFIER, hljs.IDENT_RE);\n  // ============================================\n  const FUNCTION_INVOKE = {\n    className: \"title.function.invoke\",\n    relevance: 0,\n    begin: regex.concat(\n      /\\b/,\n      /(?!let|for|while|if|else|match\\b)/,\n      IDENT_RE,\n      regex.lookahead(/\\s*\\(/))\n  };\n  const NUMBER_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  const KEYWORDS = [\n    \"abstract\",\n    \"as\",\n    \"async\",\n    \"await\",\n    \"become\",\n    \"box\",\n    \"break\",\n    \"const\",\n    \"continue\",\n    \"crate\",\n    \"do\",\n    \"dyn\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"false\",\n    \"final\",\n    \"fn\",\n    \"for\",\n    \"if\",\n    \"impl\",\n    \"in\",\n    \"let\",\n    \"loop\",\n    \"macro\",\n    \"match\",\n    \"mod\",\n    \"move\",\n    \"mut\",\n    \"override\",\n    \"priv\",\n    \"pub\",\n    \"ref\",\n    \"return\",\n    \"self\",\n    \"Self\",\n    \"static\",\n    \"struct\",\n    \"super\",\n    \"trait\",\n    \"true\",\n    \"try\",\n    \"type\",\n    \"typeof\",\n    \"union\",\n    \"unsafe\",\n    \"unsized\",\n    \"use\",\n    \"virtual\",\n    \"where\",\n    \"while\",\n    \"yield\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"Some\",\n    \"None\",\n    \"Ok\",\n    \"Err\"\n  ];\n  const BUILTINS = [\n    // functions\n    'drop ',\n    // traits\n    \"Copy\",\n    \"Send\",\n    \"Sized\",\n    \"Sync\",\n    \"Drop\",\n    \"Fn\",\n    \"FnMut\",\n    \"FnOnce\",\n    \"ToOwned\",\n    \"Clone\",\n    \"Debug\",\n    \"PartialEq\",\n    \"PartialOrd\",\n    \"Eq\",\n    \"Ord\",\n    \"AsRef\",\n    \"AsMut\",\n    \"Into\",\n    \"From\",\n    \"Default\",\n    \"Iterator\",\n    \"Extend\",\n    \"IntoIterator\",\n    \"DoubleEndedIterator\",\n    \"ExactSizeIterator\",\n    \"SliceConcatExt\",\n    \"ToString\",\n    // macros\n    \"assert!\",\n    \"assert_eq!\",\n    \"bitflags!\",\n    \"bytes!\",\n    \"cfg!\",\n    \"col!\",\n    \"concat!\",\n    \"concat_idents!\",\n    \"debug_assert!\",\n    \"debug_assert_eq!\",\n    \"env!\",\n    \"eprintln!\",\n    \"panic!\",\n    \"file!\",\n    \"format!\",\n    \"format_args!\",\n    \"include_bytes!\",\n    \"include_str!\",\n    \"line!\",\n    \"local_data_key!\",\n    \"module_path!\",\n    \"option_env!\",\n    \"print!\",\n    \"println!\",\n    \"select!\",\n    \"stringify!\",\n    \"try!\",\n    \"unimplemented!\",\n    \"unreachable!\",\n    \"vec!\",\n    \"write!\",\n    \"writeln!\",\n    \"macro_rules!\",\n    \"assert_ne!\",\n    \"debug_assert_ne!\"\n  ];\n  const TYPES = [\n    \"i8\",\n    \"i16\",\n    \"i32\",\n    \"i64\",\n    \"i128\",\n    \"isize\",\n    \"u8\",\n    \"u16\",\n    \"u32\",\n    \"u64\",\n    \"u128\",\n    \"usize\",\n    \"f32\",\n    \"f64\",\n    \"str\",\n    \"char\",\n    \"bool\",\n    \"Box\",\n    \"Option\",\n    \"Result\",\n    \"String\",\n    \"Vec\"\n  ];\n  return {\n    name: 'Rust',\n    aliases: [ 'rs' ],\n    keywords: {\n      $pattern: hljs.IDENT_RE + '!?',\n      type: TYPES,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: BUILTINS\n    },\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', { contains: [ 'self' ] }),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        begin: /b?\"/,\n        illegal: null\n      }),\n      {\n        className: 'symbol',\n        // negative lookahead to avoid matching `'`\n        begin: /'[a-zA-Z_][a-zA-Z0-9_]*(?!')/\n      },\n      {\n        scope: 'string',\n        variants: [\n          { begin: /b?r(#*)\"(.|\\n)*?\"\\1(?!#)/ },\n          {\n            begin: /b?'/,\n            end: /'/,\n            contains: [\n              {\n                scope: \"char.escape\",\n                match: /\\\\('|\\w|x\\w{2}|u\\w{4}|U\\w{8})/\n              }\n            ]\n          }\n        ]\n      },\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b0b([01_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b0o([0-7_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)'\n                   + NUMBER_SUFFIX }\n        ],\n        relevance: 0\n      },\n      {\n        begin: [\n          /fn/,\n          /\\s+/,\n          UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.function\"\n        }\n      },\n      {\n        className: 'meta',\n        begin: '#!?\\\\[',\n        end: '\\\\]',\n        contains: [\n          {\n            className: 'string',\n            begin: /\"/,\n            end: /\"/,\n            contains: [\n              hljs.BACKSLASH_ESCAPE\n            ]\n          }\n        ]\n      },\n      {\n        begin: [\n          /let/,\n          /\\s+/,\n          /(?:mut\\s+)?/,\n          UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"keyword\",\n          4: \"variable\"\n        }\n      },\n      // must come before impl/for rule later\n      {\n        begin: [\n          /for/,\n          /\\s+/,\n          UNDERSCORE_IDENT_RE,\n          /\\s+/,\n          /in/\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"variable\",\n          5: \"keyword\"\n        }\n      },\n      {\n        begin: [\n          /type/,\n          /\\s+/,\n          UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: [\n          /(?:trait|enum|struct|union|impl|for)/,\n          /\\s+/,\n          UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: {\n          keyword: \"Self\",\n          built_in: BUILTINS,\n          type: TYPES\n        }\n      },\n      {\n        className: \"punctuation\",\n        begin: '->'\n      },\n      FUNCTION_INVOKE\n    ]\n  };\n}\n\nexport { rust as default };\n","function y(t, f) {\n  const n = {\n    type: \"footnotes\",\n    raw: f,\n    rawItems: [],\n    items: []\n  };\n  return {\n    name: \"footnote\",\n    level: \"block\",\n    childTokens: [\"content\"],\n    tokenizer(r) {\n      t.hasFootnotes || (this.lexer.tokens.push(n), t.tokens = this.lexer.tokens, t.hasFootnotes = !0, n.rawItems = [], n.items = []);\n      const s = /^\\[\\^([^\\]\\n]+)\\]:(?:[ \\t]+|[\\n]*?|$)([^\\n]*?(?:\\n|$)(?:\\n*?[ ]{4,}[^\\n]*)*)/.exec(\n        r\n      );\n      if (s) {\n        const [a, d, c = \"\"] = s;\n        let l = c.split(`\n`).reduce((i, h) => i + `\n` + h.replace(/^(?:[ ]{4}|[\\t])/, \"\"), \"\");\n        const e = l.trimEnd().split(`\n`).pop();\n        l += // add lines after list, blockquote, codefence, and table\n        e && /^[ \\t]*?[>\\-*][ ]|[`]{3,}$|^[ \\t]*?[|].+[|]$/.test(e) ? `\n\n` : \"\";\n        const o = {\n          type: \"footnote\",\n          raw: a,\n          label: d,\n          refs: [],\n          content: this.lexer.blockTokens(l)\n        };\n        return n.rawItems.push(o), o;\n      }\n    },\n    renderer() {\n      return \"\";\n    }\n  };\n}\nfunction R(t, f = !1) {\n  let n = 0;\n  return {\n    name: \"footnoteRef\",\n    level: \"inline\",\n    tokenizer(r) {\n      const s = /^\\[\\^([^\\]\\n]+)\\]/.exec(r);\n      if (s) {\n        const [a, d] = s, c = this.lexer.tokens[0], l = c.rawItems.filter(\n          (h) => h.label === d\n        );\n        if (!l.length) return;\n        const e = l[0], o = c.items.filter((h) => h.label === d)[0], i = {\n          type: \"footnoteRef\",\n          raw: a,\n          id: \"\",\n          label: d\n        };\n        return o ? (i.id = o.refs[0].id, o.refs.push(i)) : (n++, i.id = String(n), e.refs.push(i), c.items.push(e)), i;\n      }\n    },\n    renderer({ id: r, label: s }) {\n      n = 0;\n      const a = encodeURIComponent(s);\n      return `<sup><a id=\"${t}ref-${a}\" href=\"#${t + a}\" data-${t}ref aria-describedby=\"${t}label\">${f ? `[${r}]` : r}</a></sup>`;\n    }\n  };\n}\nfunction g(t, f, n, r, s, a) {\n  return {\n    name: \"footnotes\",\n    renderer({ raw: d, items: c = [] }) {\n      if (c.length === 0) return \"\";\n      const l = c.reduce(\n        (h, { label: $, content: w, refs: F }) => {\n          const m = encodeURIComponent($), p = this.parser.parse(w).trimEnd(), k = p.endsWith(\"</p>\");\n          let u = `<li id=\"${t + m}\">\n`;\n          return u += k ? p.replace(/<\\/p>$/, \"\") : p, F.forEach((E, b) => {\n            const L = a.replace(\"{0}\", $);\n            u += ` <a href=\"#${t}ref-${m}\" data-${t}backref aria-label=\"${L}\">${b > 0 ? `↩<sup>${b + 1}</sup>` : \"↩\"}</a>`;\n          }), u += k ? `</p>\n` : `\n`, u += `</li>\n`, h + u;\n        },\n        \"\"\n      );\n      let e = \"\";\n      n && (e += `<hr data-${f}footnotes>\n`);\n      let o = \"\";\n      r && (o = ` class=\"${r}\"`);\n      let i = \"\";\n      return s && (i = ` class=\"${s}\"`), e += `<section${o} data-${f}footnotes>\n`, e += `<h2 id=\"${t}label\"${i}>${d.trimEnd()}</h2>\n`, e += `<ol>\n${l}</ol>\n`, e += `</section>\n`, e;\n    }\n  };\n}\nfunction T(t = {}) {\n  const {\n    prefixId: f = \"footnote-\",\n    prefixData: n = \"\",\n    description: r = \"Footnotes\",\n    refMarkers: s = !1,\n    footnoteDivider: a = !1,\n    sectionClass: d = \"footnotes\",\n    headingClass: c = \"sr-only\",\n    backRefLabel: l = \"Back to reference {0}\"\n  } = t, e = { hasFootnotes: !1, tokens: [] };\n  return {\n    extensions: [\n      y(e, r),\n      R(f, s),\n      g(\n        f,\n        n,\n        a,\n        d,\n        c,\n        l\n      )\n    ],\n    walkTokens(o) {\n      o.type === \"footnotes\" && e.tokens.indexOf(o) === 0 && o.items.length && (e.tokens[0] = { type: \"space\", raw: \"\" }, e.tokens.push(o)), e.hasFootnotes && (e.hasFootnotes = !1);\n    }\n  };\n}\nexport {\n  T as default\n};\n//# sourceMappingURL=index.js.map\n"],"names":["Object","JSON","e","n","RegExp","r","String","Number","Array","Error","console","H","Symbol","a","document","window","Map","Set","u","encodeURI","t","Math","Promise","parseInt","arguments","Reflect","TypeError","Function","i","hljs","marked","Marked","markedHighlight","highlight","code","lang","info","language","markedFootnote","l","o","encodeURIComponent","markedAlert","docketProps","undefined","htmlDecode","input","doc","DOMParser","loadActiveNote","chrome","result","setActiveNote","getNoteByUUID","getNoteByIndex","createNote","loadIndexedDbNotes","db","request","notesStore","transaction","event","notes","note","setNoteByUUID","renderNoteList","initDbConnection","indexedDB","loadIndexedDbNoteOrder","getHTMLEditorText","uuid","index","deleteNoteByUUID","_docketProps_dbConnection","uuidAtIndex","saveNoteOrder","moveNoteToIndex","targetIndex","prevIndex","i1","uuidAtIndex1","getActiveNote","renderMarkdown","mdRenderPanel","editorText","DOMPurify","noteClickHandler","noteListElement","UUIDsByIndex","b","uuidAndIndex","_index","noteElement","draggedUUID","targetUUID","parentElement","saveActiveNote","alert","userNote","Date","serialized","parsed","debounce","lastExecuted","handleInput","currTime","setTimeout","noteTemplate","newNote","crypto","prevActiveNote","noteTitleElement","noteEditorElement","noteListItem","setTheme","theme","themedElements","element","toggleDarkMode","darkModeSlider","updateCodeStyle","_oldStyleSheet_parentNode","oldStyleSheet","codeStylesheetElement","toggleMarkdownInput","markdownInput","editorDivider","toggleMarkdownOutput","mdRenderSlider","markdownOutput","toggleSidebar","sidebar","initializeDocket","codeStyleDropdown","bodyElement","deleteNoteButton","confirm","newNoteButton","downloadNoteButton","activeNote","blob","Blob","url","URL","toggleMarkdownInputButton","mdTitle"],"mappings":"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D,YAAU,EAAE,GAAc,WAAW,CADoB,AAClB,EAE1C,CAAE,MAAO,CAAC,IAAI,EAAE,GAAc,GAAG,EAAE,GAAK,4BAA4B,CAAC,AAAC,EACtE,CAAE,MAAO,CAAC,CAAC,EAAE,GAAK,WAAW,CAAC,AAAC,EAC/B,CAAE,MAAO,CAAC,IAAI,EAAE,GAAc,UAAU,CAAC,AAAC,EAG1C,CAAE,MAAO,CAAC,UAAU,EAAE,GAAU,OAAO,EAAE,GAAU,MAAM,EAAE,GACxD,YAAU,EAAE,GAAc,WAAW,CADgC,AAC9B,EAG1C,CAAE,MAAO,gCAAiC,EAG1C,CAAE,MAAO,CAAC,SAAS,EAAE,GAAU,SAAS,CAAC,AAAC,EAG1C,CAAE,MAAO,wBAAyB,EAGlC,CAAE,MAAO,+BAAgC,EAC1C,CACD,UAAW,CACb,ECjCA,IAAM,GAAW,2BACX,GAAW,CACf,KACA,KACA,KACA,KACA,MACA,QACA,UACA,MACA,MACA,WACA,KACA,SACA,OACA,OACA,QACA,QACA,aACA,OACA,QACA,OACA,UACA,MACA,SACA,WACA,SACA,SACA,MACA,QACA,QACA,QAIA,WACA,QACA,QACA,SACA,SACA,OACA,SACA,UAEA,QACD,CACK,GAAW,CACf,OACA,QACA,OACA,YACA,MACA,WACD,CAGK,GAAQ,CAEZ,SACA,WACA,UACA,SAEA,OACA,OACA,SACA,SAEA,SACA,SAEA,QACA,eACA,eACA,YACA,aACA,oBACA,aACA,aACA,cACA,cACA,gBACA,iBAEA,MACA,MACA,UACA,UAEA,cACA,oBACA,UACA,WACA,OAEA,UACA,YACA,oBACA,gBAEA,UACA,QAEA,OAEA,cACD,CAEK,GAAc,CAClB,QACA,YACA,gBACA,aACA,iBACA,cACA,YACA,WACD,CAEK,GAAmB,CACvB,cACA,aACA,gBACA,eAEA,UACA,UAEA,OACA,WACA,QACA,aACA,WACA,YACA,qBACA,YACA,qBACA,SACA,WACD,CAEK,GAAqB,CACzB,YACA,OACA,QACA,UACA,SACA,WACA,eACA,iBACA,SACA,SACD,CAEK,GAAY,EAAE,CAAC,MAAM,CACzB,GACA,GACA,IC7JI,GAAW,2BACX,GAAW,CACf,KACA,KACA,KACA,KACA,MACA,QACA,UACA,MACA,MACA,WACA,KACA,SACA,OACA,OACA,QACA,QACA,aACA,OACA,QACA,OACA,UACA,MACA,SACA,WACA,SACA,SACA,MACA,QACA,QACA,QAIA,WACA,QACA,QACA,SACA,SACA,OACA,SACA,UAEA,QACD,CACK,GAAW,CACf,OACA,QACA,OACA,YACA,MACA,WACD,CAGK,GAAQ,CAEZ,SACA,WACA,UACA,SAEA,OACA,OACA,SACA,SAEA,SACA,SAEA,QACA,eACA,eACA,YACA,aACA,oBACA,aACA,aACA,cACA,cACA,gBACA,iBAEA,MACA,MACA,UACA,UAEA,cACA,oBACA,UACA,WACA,OAEA,UACA,YACA,oBACA,gBAEA,UACA,QAEA,OAEA,cACD,CAEK,GAAc,CAClB,QACA,YACA,gBACA,aACA,iBACA,cACA,YACA,WACD,CAEK,GAAmB,CACvB,cACA,aACA,gBACA,eAEA,UACA,UAEA,OACA,WACA,QACA,aACA,WACA,YACA,qBACA,YACA,qBACA,SACA,WACD,CAEK,GAAqB,CACzB,YACA,OACA,QACA,UACA,SACA,WACA,eACA,iBACA,SACA,SACD,CAEK,GAAY,EAAE,CAAC,MAAM,CACzB,GACA,GACA,I,4NCzIFyB,ACjBe,GDiBfA,gBAAqB,CAAC,IEbtB,SAAW,CAAI,EACb,IAAM,EAAQ,EAAK,KAAK,CAIlB,EAAsB,EAAK,OAAO,CAAC,KAAM,IAAK,CAAE,SAAU,CAAE,CAAE,MAAO,MAAO,EAAG,AAAC,GAChF,EAAmB,qBACnB,EAAe,kBAEf,EAAmB,IACrB,EAAmB,IACnB,EAAM,QAAQ,CAAC,GACf,gBAAkB,EAAM,QAAQ,CAJP,YAK3B,IAGI,EAAQ,CACZ,UAAW,OACX,SAAU,CACR,CAAE,MAAO,oBAAqB,EAC9B,CAAE,MAAO,uBAAwB,EAClC,AAEH,EAKM,EAAU,CACd,UAAW,SACX,SAAU,CACR,CACE,MAAO,cACP,IAAK,IACL,QAAS,MACT,SAAU,CAAE,EAAK,gBAAgB,CAAE,AACrC,EACA,CACE,MAAO,sEACP,IAAK,IACL,QAAS,GACX,EACA,EAAK,iBAAiB,CAAC,CACrB,MAAO,mCACP,IAAK,qBACP,GACD,AACH,EAEM,EAAU,CACd,UAAW,SACX,SAAU,CACR,CAAE,MAAO,cAAe,EACxB,CAAE,MAAO,iFAAkF,EAC3F,CAAE,MAAO,kHAAmH,EAC5H,CAAE,MAAO,wDAAyD,EACrE,CACC,UAAW,CACb,EAEM,EAAe,CACnB,UAAW,OACX,MAAO,eACP,IAAK,IACL,SAAU,CAAE,QACR,yGACyD,EAC7D,SAAU,CACR,CACE,MAAO,OACP,UAAW,CACb,EACA,EAAK,OAAO,CAAC,EAAS,CAAE,UAAW,QAAS,GAC5C,CACE,UAAW,SACX,MAAO,OACT,EACA,EACA,EAAK,oBAAoB,CAC1B,AACH,EAEM,EAAa,CACjB,UAAW,QACX,MAAO,EAAM,QAAQ,CAAC,GAAgB,EAAK,QAAQ,CACnD,UAAW,CACb,EAEM,EAAiB,EAAM,QAAQ,CAAC,GAAgB,EAAK,QAAQ,CAAG,UAoFhE,EAAW,CACf,QAnFiB,CACjB,MACA,OACA,QACA,OACA,WACA,UACA,KACA,OACA,OACA,SACA,MACA,UACA,OACA,KACA,SACA,WACA,WACA,SACA,SACA,SACA,gBACA,SACA,SACA,UACA,QACA,WACA,QACA,WACA,WACA,UACA,WACA,YACA,iBACA,gBAEA,UACA,UACA,WACA,gBACA,eAEA,UACD,CAyCC,KAvCc,CACd,QACA,SACA,SACA,WACA,MACA,QACA,OACA,OACA,OACA,QACA,UACA,WACA,aACA,aACA,aACA,aACA,cACA,cACA,eACA,WACA,WACA,WACA,YACA,YACA,YACA,aAEA,QACA,SACA,YAEA,UACA,OACA,YACD,CAKC,QAAS,kBAET,SAAU,kzBASZ,EAEM,EAAsB,CAC1B,EACA,EACA,EACA,EAAK,oBAAoB,CACzB,EACA,EACD,CAEK,EAAqB,CAIzB,SAAU,CACR,CACE,MAAO,IACP,IAAK,GACP,EACA,CACE,MAAO,KACP,IAAK,IACP,EACA,CACE,cAAe,wBACf,IAAK,GACP,EACD,CACD,SAAU,EACV,SAAU,EAAoB,MAAM,CAAC,CACnC,CACE,MAAO,KACP,IAAK,KACL,SAAU,EACV,SAAU,EAAoB,MAAM,CAAC,CAAE,OAAQ,EAC/C,UAAW,CACb,EACD,EACD,UAAW,CACb,EAEM,EAAuB,CAC3B,MAAO,IAAM,EAAmB,eAAiB,EACjD,YAAa,GACb,IAAK,QACL,WAAY,GACZ,SAAU,EACV,QAAS,iBACT,SAAU,CACR,CACE,MAAO,EACP,SAAU,EACV,UAAW,CACb,EACA,CACE,MAAO,EACP,YAAa,GACb,SAAU,CAAE,EAAK,OAAO,CAAC,EAAY,CAAE,UAAW,gBAAiB,GAAI,CACvE,UAAW,CACb,EAGA,CACE,UAAW,EACX,MAAO,GACT,EACA,CACE,UAAW,SACX,MAAO,KACP,IAAK,KACL,SAAU,EACV,UAAW,EACX,SAAU,CACR,EACA,EAAK,oBAAoB,CACzB,EACA,EACA,EAEA,CACE,MAAO,KACP,IAAK,KACL,SAAU,EACV,UAAW,EACX,SAAU,CACR,OACA,EACA,EAAK,oBAAoB,CACzB,EACA,EACA,EACD,AACH,EACD,AACH,EACA,EACA,EACA,EAAK,oBAAoB,CACzB,EACD,AACH,EAEA,MAAO,CACL,KAAM,IACN,QAAS,CAAE,IAAK,CAChB,SAAU,EAGV,kBAAmB,GACnB,QAAS,KACT,SAAU,EAAE,CAAC,MAAM,CACjB,EACA,EACA,EACA,CACE,EACA,CACE,MAAO,EAAK,QAAQ,CAAG,KACvB,SAAU,CACZ,EACA,CACE,UAAW,QACX,cAAe,0BACf,IAAK,WACL,SAAU,CACR,CAAE,cAAe,oBAAqB,EACtC,EAAK,UAAU,CAChB,AACH,EACD,EACH,QAAS,CACP,aAAc,EACd,QAAS,EACT,SAAU,CACZ,CACF,CACF,GFrTAA,AClBe,GDkBfA,gBAAqB,CAAC,MGdtB,SAAa,CAAI,EACf,IAAM,EAAQ,EAAK,KAAK,CAIlB,EAAsB,EAAK,OAAO,CAAC,KAAM,IAAK,CAAE,SAAU,CAAE,CAAE,MAAO,MAAO,EAAG,AAAC,GAChF,EAAmB,qBACnB,EAAe,kBAEf,EAAmB,cACrB,EAAmB,IACnB,EAAM,QAAQ,CAAC,GACf,gBAAkB,EAAM,QAAQ,CAJP,YAK3B,IAEI,EAAsB,CAC1B,UAAW,OACX,MAAO,oBACT,EAKM,EAAU,CACd,UAAW,SACX,SAAU,CACR,CACE,MAAO,cACP,IAAK,IACL,QAAS,MACT,SAAU,CAAE,EAAK,gBAAgB,CAAE,AACrC,EACA,CACE,MAAO,sEACP,IAAK,IACL,QAAS,GACX,EACA,EAAK,iBAAiB,CAAC,CACrB,MAAO,mCACP,IAAK,qBACP,GACD,AACH,EAEM,EAAU,CACd,UAAW,SACX,SAAU,CAER,CAAE,MACA,8UAkBF,EAEA,CAAE,MACA,6JAcF,EACD,CACD,UAAW,CACb,EAEM,EAAe,CACnB,UAAW,OACX,MAAO,eACP,IAAK,IACL,SAAU,CAAE,QACR,wFACwC,EAC5C,SAAU,CACR,CACE,MAAO,OACP,UAAW,CACb,EACA,EAAK,OAAO,CAAC,EAAS,CAAE,UAAW,QAAS,GAC5C,CACE,UAAW,SACX,MAAO,OACT,EACA,EACA,EAAK,oBAAoB,CAC1B,AACH,EAEM,EAAa,CACjB,UAAW,QACX,MAAO,EAAM,QAAQ,CAAC,GAAgB,EAAK,QAAQ,CACnD,UAAW,CACb,EAEM,EAAiB,EAAM,QAAQ,CAAC,GAAgB,EAAK,QAAQ,CAAG,UA+RhE,EAAe,CACnB,KAlMqB,CACrB,OACA,OACA,WACA,WACA,UACA,SACA,QACA,MACA,OACA,QACA,OACA,UACA,WACA,SACA,QACA,SACD,CAkLC,QA9RwB,CACxB,UACA,UACA,MACA,SACA,MACA,gBACA,gBACA,kBACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,WACA,YACA,WACA,QACA,UACA,gBACA,YACA,YACA,YACA,WACA,WACA,UACA,SACA,KACA,kBACA,OACA,OACA,WACA,SACA,SACA,QACA,QACA,MACA,SACA,OACA,KACA,SACA,SACA,SACA,UACA,YACA,MACA,WACA,MACA,SACA,UACA,WACA,KACA,QACA,WACA,UACA,YACA,SACA,WACA,WACA,sBACA,WACA,SACA,SACA,gBACA,iBACA,SACA,SACA,eACA,WACA,OACA,eACA,QACA,mBACA,2BACA,OACA,MACA,UACA,SACA,WACA,QACA,QACA,UACA,WACA,QACA,MACA,SACD,CAuMC,QAde,CACf,OACA,QACA,UACA,UACA,OACD,CASC,SANe,CAAE,UAAW,CAO5B,YAnLiB,CACjB,MACA,WACA,UACA,mBACA,SACA,UACA,qBACA,yBACA,qBACA,QACA,aACA,WACA,WACA,SACA,YACA,mBACA,gBACA,UACA,QACA,aACA,WACA,WACA,QACA,WACA,gBACA,gBACA,OACA,UACA,iBACA,QACA,kBACA,wBACA,cACA,MACA,gBACA,cACA,eACA,qBACA,aACA,QACA,cACA,eACA,cACA,SACA,YACA,QACA,cACA,aACA,gBACA,qBACA,qBACA,gBACA,UACA,SACA,WACA,UACA,eACD,AA0HD,EAEM,EAAoB,CACxB,UAAW,oBACX,UAAW,EACX,SAAU,CAER,MA/HmB,CACrB,QACA,MACA,OACA,QACA,WACA,OACA,OACA,QACA,SACA,OACA,OACA,MACA,OACA,MACA,OACA,OACA,UACA,OACA,WACA,OACA,MACA,OACA,QACA,OACA,UACA,UACA,QACA,OACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,OACA,UACA,QACA,MACA,QACA,YACA,cACA,4BACA,aACA,cACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,MACA,SACA,UACA,OACA,UACA,QACA,MACA,OACA,WACA,UACA,OACA,SACA,MACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,OACA,MACA,OACA,YACA,gBACA,UACA,UACA,WACA,QACA,UACA,WACD,AA0ByB,EACxB,MAAO,EAAM,MAAM,CACjB,KACA,eACA,SACA,UACA,aACA,YACA,EAAK,QAAQ,CACb,EAAM,SAAS,CAAC,oBACpB,EAEM,EAAsB,CAC1B,EACA,EACA,EACA,EACA,EAAK,oBAAoB,CACzB,EACA,EACD,CAEK,EAAqB,CAIzB,SAAU,CACR,CACE,MAAO,IACP,IAAK,GACP,EACA,CACE,MAAO,KACP,IAAK,IACP,EACA,CACE,cAAe,wBACf,IAAK,GACP,EACD,CACD,SAAU,EACV,SAAU,EAAoB,MAAM,CAAC,CACnC,CACE,MAAO,KACP,IAAK,KACL,SAAU,EACV,SAAU,EAAoB,MAAM,CAAC,CAAE,OAAQ,EAC/C,UAAW,CACb,EACD,EACD,UAAW,CACb,EAEM,EAAuB,CAC3B,UAAW,WACX,MAAO,IAAM,EAAmB,eAAiB,EACjD,YAAa,GACb,IAAK,QACL,WAAY,GACZ,SAAU,EACV,QAAS,iBACT,SAAU,CACR,CACE,MAAO,EACP,SAAU,EACV,UAAW,CACb,EACA,CACE,MAAO,EACP,YAAa,GACb,SAAU,CAAE,EAAY,CACxB,UAAW,CACb,EAGA,CACE,MAAO,KACP,UAAW,CACb,EAEA,CACE,MAAO,IACP,eAAgB,GAChB,SAAU,CACR,EACA,EACD,AACH,EAGA,CACE,UAAW,EACX,MAAO,GACT,EACA,CACE,UAAW,SACX,MAAO,KACP,IAAK,KACL,SAAU,EACV,UAAW,EACX,SAAU,CACR,EACA,EAAK,oBAAoB,CACzB,EACA,EACA,EAEA,CACE,MAAO,KACP,IAAK,KACL,SAAU,EACV,UAAW,EACX,SAAU,CACR,OACA,EACA,EAAK,oBAAoB,CACzB,EACA,EACA,EACD,AACH,EACD,AACH,EACA,EACA,EACA,EAAK,oBAAoB,CACzB,EACD,AACH,EAEA,MAAO,CACL,KAAM,MACN,QAAS,CACP,KACA,MACA,MACA,MACA,KACA,MACA,MACD,CACD,SAAU,EACV,QAAS,KACT,iBAAkB,CAAE,oBAAqB,UAAW,EACpD,SAAU,EAAE,CAAC,MAAM,CACjB,EACA,EACA,EACA,EACA,CACE,EACA,CACE,MAAO,8NACP,IAAK,IACL,SAAU,EACV,SAAU,CACR,OACA,EACD,AACH,EACA,CACE,MAAO,EAAK,QAAQ,CAAG,KACvB,SAAU,CACZ,EACA,CACE,MAAO,CAEL,wDACA,MACA,MACD,CACD,UAAW,CACT,EAAG,UACH,EAAG,aACL,CACF,EACD,CACL,CACF,GHpkBAA,ACnBe,GDmBfA,gBAAqB,CAAC,OHyCtB,SAAc,CAAI,EAChB,IAAM,EAAQ,EAAK,KAAK,CAClB,EAAgB,uCAChB,EAAmB,EACrB,AAbN,SAAS,EAAW,CAAE,CAAE,CAAY,CAAE,CAAK,SACzC,AAAI,AAAU,KAAV,EAAqB,GAElB,EAAG,OAAO,CAAC,EAAc,GACvB,EAAW,EAAI,EAAc,EAAQ,GAEhD,EAOiB,OAAS,EAAgB,kBAAoB,EAAgB,WAAY,OAAQ,GAsE1F,EAAW,CACf,QAtEoB,CACpB,eACA,WACA,UACA,MACA,SACA,KACA,SACA,MACA,QACA,WACA,UACA,YACA,SACA,SACA,QACA,OACA,OACA,OACA,QACA,YACA,QACA,aACA,WACA,OACA,SACA,UACA,UACA,SACA,MACA,SACA,WACA,SACA,YACA,SACA,UACA,SACA,WACA,UACA,KACA,SACA,QACA,UACA,OACA,OACD,CA0BC,QAnBe,CACf,QACA,OACA,OACD,CAgBC,KAdY,CACZ,OACA,UACA,OACA,QACA,MACA,OACA,QACA,SACD,CAMC,SA1BgB,CAChB,QACA,OACD,AAwBD,EAEM,EAAa,CACjB,UAAW,OACX,MAAO,IAAM,EACb,SAAU,CACR,CACE,MAAO,KACP,IAAK,KACL,SAAU,CAAE,OAAQ,AACtB,EACD,AACH,EACM,EAAS,CACb,UAAW,SACX,MAAO,KACP,IAAK,KACL,SAAU,EACV,UAAW,EACX,SAAU,CAAE,EAAK,oBAAoB,CAAE,CACvC,WAAY,EACd,EAEA,MAAO,CACL,KAAM,OACN,QAAS,CAAE,MAAO,CAClB,SAAU,EACV,QAAS,QACT,SAAU,CACR,EAAK,OAAO,CACV,UACA,OACA,CACE,UAAW,EACX,SAAU,CACR,CAEE,MAAO,OACP,UAAW,CACb,EACA,CACE,UAAW,SACX,MAAO,YACT,EACD,AACH,GAGF,CACE,MAAO,wBACP,SAAU,SACV,UAAW,CACb,EACA,EAAK,mBAAmB,CACxB,EAAK,oBAAoB,CACzB,CACE,MAAO,MACP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AAI,EAClB,IAAM,EAAQ,EAAK,KAAK,CAClB,EAAW,qCACX,EAAiB,CACrB,MACA,KACA,SACA,QACA,QACA,QACA,OACA,QACA,WACA,MACA,MACA,OACA,OACA,SACA,UACA,MACA,OACA,SACA,KACA,SACA,KACA,KACA,SACA,QACA,cACA,MACA,KACA,OACA,QACA,SACA,MACA,QACA,OACA,QACD,CAsGK,EAAW,CACf,SAAU,sBACV,QAAS,EACT,SAvGgB,CAChB,aACA,MACA,MACA,MACA,QACA,MACA,OACA,aACA,YACA,QACA,WACA,MACA,cACA,UACA,UACA,UACA,OACA,MACA,SACA,YACA,OACA,OACA,SACA,QACA,SACA,YACA,UACA,UACA,UACA,OACA,OACA,MACA,KACA,QACA,MACA,aACA,aACA,OACA,MACA,OACA,SACA,MACA,MACA,aACA,MACA,OACA,SACA,MACA,OACA,MACA,MACA,QACA,WACA,QACA,OACA,WACA,QACA,MACA,UACA,QACA,SACA,eACA,MACA,MACA,QACA,QACA,OACA,OACA,MACD,CAkCC,QAhCe,CACf,YACA,WACA,QACA,OACA,iBACA,OACD,CA0BC,KArBY,CACZ,MACA,WACA,YACA,OACA,OACA,UACA,UACA,WACA,WACA,MACA,QACA,OACA,QACD,AAQD,EAEM,EAAS,CACb,UAAW,OACX,MAAO,gBACT,EAEM,EAAQ,CACZ,UAAW,QACX,MAAO,KACP,IAAK,KACL,SAAU,EACV,QAAS,GACX,EAEM,EAAkB,CACtB,MAAO,OACP,UAAW,CACb,EAEM,EAAS,CACb,UAAW,SACX,SAAU,CAAE,EAAK,gBAAgB,CAAE,CACnC,SAAU,CACR,CACE,MAAO,yCACP,IAAK,MACL,SAAU,CACR,EAAK,gBAAgB,CACrB,EACD,CACD,UAAW,EACb,EACA,CACE,MAAO,yCACP,IAAK,MACL,SAAU,CACR,EAAK,gBAAgB,CACrB,EACD,CACD,UAAW,EACb,EACA,CACE,MAAO,8BACP,IAAK,MACL,SAAU,CACR,EAAK,gBAAgB,CACrB,EACA,EACA,EACD,AACH,EACA,CACE,MAAO,8BACP,IAAK,MACL,SAAU,CACR,EAAK,gBAAgB,CACrB,EACA,EACA,EACD,AACH,EACA,CACE,MAAO,eACP,IAAK,IACL,UAAW,EACb,EACA,CACE,MAAO,eACP,IAAK,IACL,UAAW,EACb,EACA,CACE,MAAO,4BACP,IAAK,GACP,EACA,CACE,MAAO,4BACP,IAAK,GACP,EACA,CACE,MAAO,4BACP,IAAK,IACL,SAAU,CACR,EAAK,gBAAgB,CACrB,EACA,EACD,AACH,EACA,CACE,MAAO,4BACP,IAAK,IACL,SAAU,CACR,EAAK,gBAAgB,CACrB,EACA,EACD,AACH,EACA,EAAK,gBAAgB,CACrB,EAAK,iBAAiB,CACvB,AACH,EAGM,EAAY,kBACZ,EAAa,CAAC,KAAK,EAAE,EAAU,OAAO,EAAE,EAAU,MAAM,EAAE,EAAU,IAAI,CAAC,CAMzE,EAAY,CAAC,IAAI,EAAE,EAAe,IAAI,CAAC,KAAK,CAAC,CAC7C,EAAS,CACb,UAAW,SACX,UAAW,EACX,SAAU,CAWR,CACE,MAAO,CAAC,KAAK,EAAE,EAAU,GAAG,EAAE,EAAW,YAAY,EAAE,EAAU,SAAS,EAAE,EAAU,CAAC,CAAC,AAC1F,EACA,CACE,MAAO,CAAC,CAAC,EAAE,EAAW,MAAM,CAAC,AAC/B,EAQA,CACE,MAAO,CAAC,uCAAuC,EAAE,EAAU,CAAC,CAAC,AAC/D,EACA,CACE,MAAO,CAAC,yBAAyB,EAAE,EAAU,CAAC,CAAC,AACjD,EACA,CACE,MAAO,CAAC,0BAA0B,EAAE,EAAU,CAAC,CAAC,AAClD,EACA,CACE,MAAO,CAAC,gCAAgC,EAAE,EAAU,CAAC,CAAC,AACxD,EAIA,CACE,MAAO,CAAC,IAAI,EAAE,EAAU,QAAQ,EAAE,EAAU,CAAC,CAAC,AAChD,EACD,AACH,EACM,EAAe,CACnB,UAAW,UACX,MAAO,EAAM,SAAS,CAAC,WACvB,IAAK,IACL,SAAU,EACV,SAAU,CACR,CACE,MAAO,SACT,EAEA,CACE,MAAO,IACP,IAAK,OACL,eAAgB,EAClB,EACD,AACH,EACM,EAAS,CACb,UAAW,SACX,SAAU,CAER,CACE,UAAW,GACX,MAAO,UACP,KAAM,EACR,EACA,CACE,MAAO,KACP,IAAK,KACL,aAAc,GACd,WAAY,GACZ,SAAU,EACV,SAAU,CACR,OACA,EACA,EACA,EACA,EAAK,iBAAiB,CACvB,AACH,EACD,AACH,EAOA,OANA,EAAM,QAAQ,CAAG,CACf,EACA,EACA,EACD,CAEM,CACL,KAAM,SACN,QAAS,CACP,KACA,MACA,UACD,CACD,aAAc,GACd,SAAU,EACV,QAAS,cACT,SAAU,CACR,EACA,EACA,CAEE,MAAO,oBACP,MAAO,UACT,EACA,CAGE,cAAe,KACf,UAAW,CACb,EACA,CAAE,MAAO,SAAU,MAAO,SAAU,EACpC,EACA,EACA,EAAK,iBAAiB,CACtB,CACE,MAAO,CACL,QAAS,MACT,EACD,CACD,MAAO,CACL,EAAG,UACH,EAAG,gBACL,EACA,SAAU,CAAE,EAAQ,AACtB,EACA,CACE,SAAU,CACR,CACE,MAAO,CACL,UAAW,MACX,EAAU,MACV,QAAS,EAAS,QACnB,AACH,EACA,CACE,MAAO,CACL,UAAW,MACX,EACD,AACH,EACD,CACD,MAAO,CACL,EAAG,UACH,EAAG,cACH,EAAG,uBACL,CACF,EACA,CACE,UAAW,OACX,MAAO,WACP,IAAK,UACL,SAAU,CACR,EACA,EACA,EACD,AACH,EACD,AACH,CACF,GJxZAA,ACtBe,GDsBfA,gBAAqB,CAAC,YKlBtB,SAAmB,CAAI,EACrB,MAAO,CACL,KAAM,aACN,QAAS,CACP,OACA,MACD,CACD,kBAAmB,EACrB,CACF,GLUAA,ACvBe,GDuBfA,gBAAqB,CAAC,OMhBtB,SAAc,CAAI,EAChB,IAAM,EAAQ,EAAK,KAAK,CAGlB,EAAiB,QACjB,EAAsB,EAAM,MAAM,CAAC,EAAgB,EAAK,mBAAmB,EAC3E,EAAW,EAAM,MAAM,CAAC,EAAgB,EAAK,QAAQ,EAErD,EAAkB,CACtB,UAAW,wBACX,UAAW,EACX,MAAO,EAAM,MAAM,CACjB,KACA,oCACA,EACA,EAAM,SAAS,CAAC,SACpB,EACM,EAAgB,wCA+DhB,EAAW,CAEf,QAEA,OACA,OACA,QACA,OACA,OACA,KACA,QACA,SACA,UACA,QACA,QACA,YACA,aACA,KACA,MACA,QACA,QACA,OACA,OACA,UACA,WACA,SACA,eACA,sBACA,oBACA,iBACA,WAEA,UACA,aACA,YACA,SACA,OACA,OACA,UACA,iBACA,gBACA,mBACA,OACA,YACA,SACA,QACA,UACA,eACA,iBACA,eACA,QACA,kBACA,eACA,cACA,SACA,WACA,UACA,aACA,OACA,iBACA,eACA,OACA,SACA,WACA,eACA,aACA,mBACD,CACK,EAAQ,CACZ,KACA,MACA,MACA,MACA,OACA,QACA,KACA,MACA,MACA,MACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,MACA,SACA,SACA,SACA,MACD,CACD,MAAO,CACL,KAAM,OACN,QAAS,CAAE,KAAM,CACjB,SAAU,CACR,SAAU,EAAK,QAAQ,CAAG,KAC1B,KAAM,EACN,QAhKa,CACf,WACA,KACA,QACA,QACA,SACA,MACA,QACA,QACA,WACA,QACA,KACA,MACA,OACA,OACA,SACA,QACA,QACA,KACA,MACA,KACA,OACA,KACA,MACA,OACA,QACA,QACA,MACA,OACA,MACA,WACA,OACA,MACA,MACA,SACA,OACA,OACA,SACA,SACA,QACA,QACA,OACA,MACA,OACA,SACA,QACA,SACA,UACA,MACA,UACA,QACA,QACA,QACD,CA4GG,QA3Ga,CACf,OACA,QACA,OACA,OACA,KACA,MACD,CAqGG,SAAU,CACZ,EACA,QAAS,KACT,SAAU,CACR,EAAK,mBAAmB,CACxB,EAAK,OAAO,CAAC,OAAQ,OAAQ,CAAE,SAAU,CAAE,OAAQ,AAAC,GACpD,EAAK,OAAO,CAAC,EAAK,iBAAiB,CAAE,CACnC,MAAO,MACP,QAAS,IACX,GACA,CACE,UAAW,SAEX,MAAO,8BACT,EACA,CACE,MAAO,SACP,SAAU,CACR,CAAE,MAAO,0BAA2B,EACpC,CACE,MAAO,MACP,IAAK,IACL,SAAU,CACR,CACE,MAAO,cACP,MAAO,+BACT,EACD,AACH,EACD,AACH,EACA,CAC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"}